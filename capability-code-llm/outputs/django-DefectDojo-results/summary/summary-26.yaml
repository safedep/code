
dojo:
  dojo.models.Finding:
    - Finding(\n                    title=str(Name),\n                    description=description,\n                    file_path=Filename,\n                    severity=self.severity(Severity),\n          ...
    - Finding(\n            title="Threatmapper_Vuln_Report-" + cve_id,\n            description=description,\n            component_name=cve_caused_by_package,\n            severity=self.severity(cve_sever...
    - Finding(\n            title=f"{component_name}:{component_version} | {name}",\n            file_path=dependency_filename,\n            test=test,\n            cwe=cwe,\n            description=descrip...
    - Finding(\n            title=title,\n            test=test,\n            cwe=cwe,\n            description=vulnerability_description,\n            severity=vulnerability_severity,\n            false_p=...
    - Finding(\n                        title=f"{type}",\n                        test=test,\n                        description=description,\n                        cwe=798,\n                        date...
    - Finding(\n        title=title,\n        date=datetime.fromtimestamp(int(test_end)),\n        test=test,\n        description=description,\n        severity=severity,\n        mitigation=mitigation,\n ...
    - Finding(\n                    title=f"{code}: {title}",\n                    test=test,\n                    severity=severity,\n                    description=description,\n                    stati...
    - Finding(title=title,\n                    test=test,\n                    description=message,\n                    severity=severity,\n                    static_finding=False)
    - Finding(\n                    title=title,\n                    date=date,\n                    severity=severity,\n                    description=description,\n                    impact=impact,\n  ...
    - Finding(\n                    title=title,\n                    severity=severity,\n                    unique_id_from_tool=unique_id,\n                    test=test,\n                    static_finding=True,\n                    dynamic_finding=False,\n                )
    - Finding(\n                    title=title,\n                    url=url,\n                    severity=severity,\n                    description=description,\n                    component_name=compo...
    - Finding(\n                    title=title,\n                    severity=severity,\n                    mitigation=mitigation,\n                    component_name=component,\n                    descr...
    - Finding(\n                    title=title,\n                    severity=severity,\n                    mitigation=mitigation,\n                    description=description,\n                    test=t...
    - Finding(\n                    title=title,\n                    test=test,\n                    description=findingdetail,\n                    severity=sev.title(),\n                    file_path=ite...
    - def parse_vulnerabilities_and_convert_to_findings(self, root: Element, test: Test) -> list[Finding]:\n        """Parse the XML and generate a list of findings."""\n        items = []\n        for chil...
    - Finding(**finding_context)
    - Finding(\n                        title=title,\n                        severity=issue["Friority"],\n                        file_path=issue["FilePath"],\n                        line=int(issue["LineS...
    - Finding(\n                        title=vuln["noteName"],\n                        test=test,\n                        description=description,\n                        severity=severity.lower().capit...
    - Finding(\n                title=row["Title"],\n                description=row["Description"],\n                date=parse(row["Date"]).date(),\n                severity=self.get_severity(row["Severit...
    - Finding(**item)
    - Finding(\n            title=title,\n            test=test,\n            description=description,\n            cwe=798,\n            severity=severity,\n            file_path=findings["file_path"],\n  ...
    - Finding(\n                    title=alert["securityVulnerability"]["advisory"]["summary"],\n                    test=test,\n                    description=description,\n                    severity=s...
    - Finding(\n                    title=ruleid,\n                    test=test,\n                    description=description,\n                    severity=severity.capitalize(),\n                    acti...
    - Finding(\n                    title=title,\n                    test=test,\n                    description=description,\n                    severity=severity,\n                    static_finding=Fal...
    - Finding(\n                title=title,\n                date=date,\n                test=test,\n                description=description,\n                severity=severity,\n                static_fin...
    - Finding(\n            test=test,  # Test\n            nb_occurences=1,  # int\n            scanner_confidence=scanner_confidence,  # int\n            description=description,  # str\n            static_finding=False,\n            dynamic_finding=True,\n        )
    - Finding(\n            title=f"{vulnerability_id}: {title}"\n            if vulnerability_id\n            else title,\n            test=test,\n            description=description,\n            severity...
    - Finding(\n            title=title,\n            description=description,\n            severity=severity,\n            scanner_confidence=scanner_confidence,\n            mitigation=mitigation,\n      ...
    - Finding(\n                test=test,\n                title=title,\n                description=description,\n                date=date,\n                severity=severity,\n                static_fin...
    - Finding(\n            title=titleText,\n            test=test,\n            cwe=798,\n            description=description,\n            severity=severity,\n            file_path=file_path,\n            line=line,\n            dynamic_finding=False,\n            static_finding=True,\n        )
    - Finding(\n                title=title,\n                test=test,\n                cwe=798,\n                description=description,\n                severity=severity,\n                file_path=fi...
    - Finding(\n                    title=title,\n                    test=test,\n                    description=findingdetail,\n                    severity=sev.title(),\n                    impact=impact...
    - Finding(**d)
    - Finding(**d)
    - Finding(\n                    title=title,\n                    unique_id_from_tool=dupe_key,\n                    date=date,\n                    test=test,\n                    active=active,\n     ...
    - def get_bug_bounty_program_json_findings(self, dict_list: dict, test: Test) -> list[Finding]:\n        return self.parse_findings(dict_list, test)
    - def get_bug_bounty_program_csv_findings(self, dict_list: dict, test: Test) -> list[Finding]:\n        return self.parse_findings(dict_list, test)
    - def parse_findings(self, dict_list: list[dict], test: Test) -> list[Finding]:\n        """Return a list of findings generated by the submitted report."""\n        findings = []\n        for entry in d...
    - Finding(\n                title=entry.get("title"),\n                severity=self.convert_severity(entry),\n                description=self.parse_description(entry),\n                date=date_parse...
    - def get_findings(self, file: TemporaryUploadedFile, test: Test) -> list[Finding]:\n        """Return the list of findings generated from the uploaded report."""\n        # first determine which format...
    - def determine_json_format(self, file: TemporaryUploadedFile, test: Test) -> list[Finding]:\n        """Evaluate the format of the JSON report that was uploaded to determine which parser to use."""\n  ...
    - def determine_csv_format(self, file: TemporaryUploadedFile, test: Test) -> list[Finding]:\n        """Evaluate the format of the CSV report that was uploaded to determine which parser to use."""\n    ...
    - Finding(\n        title=vulnerability["code"] + ": " + vulnerability["message"],\n        test=test,\n        severity=severity,\n        file_path=vulnerability["file"],\n        line=vulnerability["...
    - Finding(\n                    title=title,\n                    test=test,\n                    description=description,\n                    severity=severity,\n                    mitigation=mitigat...
    - if severity in Finding.SEVERITIES:\n        return severity\n    return "Info"
    - Finding(\n                    title=title,\n                    description=description,\n                    severity=severity,\n                    cwe=cwe,\n                    mitigation="Remediat...
    - Finding(\n                    title=title,\n                    description=description,\n                    file_path=location,\n                    line=line,\n                    severity=severity...
    - Finding(\n            title=data["vulnerabilities"]["details"].split("\n")[0],\n            date=date,\n            severity=data["vulnerabilities"]["severity"].title(),\n            description=descr...
    - Finding(title="Missing header: " + str(content),\n                        description="This security Header is missing: " + content,\n                        severity="Medium",\n                        static_finding=False,\n                        dynamic_finding=True)
    - Finding(title="Available fingerprint:" + str(content),\n                        description="This fingerprint HTTP Response Header is available. Please remove it: " + content,\n                       ...
    - Finding(title="Deprecated header: " + str(content),\n                        description="This deprecated HTTP Response Header is available. Please remove it: " + content,\n                        sev...
    - Finding(title="Empty HTTP response header: " + str(content),\n                        description="This empty HTTP Response Header value is available. Please remove it: " + content,\n                 ...
    - Finding(\n        title=item_node.get("title"),\n        test=test,\n        severity=item_node.get("severity"),\n        description=description,\n        mitigation="N/A",\n        references="",\n ...
    - def __extract_finding(\n        self, raw_finding, metadata: HydraScanMetadata, test,\n    ) -> Finding:\n        host = raw_finding.get("host")\n        port = raw_finding.get("port")\n        userna...
    - Finding(\n            test=test,\n            title="Weak username / password combination found for " + host,\n            date=parse_datetime(metadata.date)\n            if metadata.date\n           ...
    - Finding(\n                            title=name,\n                            test=test,\n                            cwe=cwe,\n                            description=issue_description,\n           ...
    - Finding(\n                    title=title,\n                    test=test,\n                    description=description,\n                    severity=severity,\n                    steps_to_reproduce...
    - Finding(\n                title=alert["title"],\n                test=test,\n                active=alert["status"] != "Closed",\n                verified=True,\n                description=self._buil...
    - Finding(\n        vuln_id_from_tool=vuln_id_from_tool,\n        service=service,\n        title=vulnerability["summary"],\n        cwe=cwe,\n        cvssv3=cvssv3,\n        severity=severity,\n       ...
    - Finding(\n            title=title,\n            severity_justification=severity_justification or None,\n            severity=severity,\n            description=(vulnerability["summary"]).strip(),\n   ...
    - Finding(\n        title=title,\n        test=test,\n        severity=severity,\n        description=(\n            vulnerability["description"] + "\n\n" + extra_desc\n        ).strip(),\n        mitig...
    - Finding(\n        title=title,\n        cwe=cwe,\n        test=test,\n        severity=severity,\n        description=(vulnerability["summary"] + extra_desc).strip(),\n        mitigation=mitigation,\n...
    - Finding(\n                        title=f"{category}: {name}",\n                        test=test,\n                        severity=severity,\n                        description=description,\n      ...
    - Finding(test=test)
    - Finding(test=test)
    - Finding(\n                    title="KrakenD" + "_" + rule,\n                    test=test,\n                    description="**Rule:** " + rule,\n                    severity=severity.lower().capital...
    - Finding(\n                title=AuditResultName + "_" + ResourceName,\n                test=test,\n                description=description,\n                severity=self.severity_mapping(level),\n   ...
    - Finding(\n        title=title,\n        test=test,\n        description=description,\n        severity=severity,\n        mitigation=mitigation,\n        vuln_id_from_tool=vuln_id_from_tool,\n        static_finding=True,\n        dynamic_finding=False,\n    )
    - Finding(\n                title=title,\n                test=test,\n                description=findingdetail,\n                severity=severity,\n                mitigation=mitigation,\n            ...
    - Finding(\n                            title=textwrap.shorten(title, 150),\n                            test=test,\n                            description=description,\n                            mit...
    - Finding(\n                    description=policy_info.get("description", ""),\n                    dynamic_finding=False,\n                    impact="\n".join(policy_info.get("threat", [])),\n       ...
    - Finding(\n                title=title,\n                test=test,\n                description=description,\n                severity=severity,\n                cwe=cwe,\n                mitigation=m...
    - def create_finding_key(f: Finding) -> str:\n            # """Hashes the finding's description and title to retrieve a key for deduplication."""\n            return hashlib.md5(\n                f.description.encode("utf-8")\n                + f.title.encode("utf-8"),\n            ).hexdigest()
    - Finding(\n                    title=finding_title,\n                    date=scan_date,\n                    test=test,\n                    severity=severity,\n                    severity_justificat...
    - Finding(\n                    title=issue.findtext("Name"),\n                    test=test,\n                    cwe=cwe,\n                    description=description,\n                    mitigation=...
    - Finding(\n                title=title,\n                cwe=919,  # Weaknesses in Mobile Applications\n                test=test,\n                description=description,\n                severity=se...
    - Finding(\n                            title=title,\n                            cwe=919,  # Weaknesses in Mobile Applications\n                            test=test,\n                            descr...
    - Finding(\n                    title=f"{key}",\n                    test=test,\n                    severity=severity,\n                    nb_occurences=1,\n                    cwe=cwe,\n                    description=description,\n                    references=references,\n                )
    - Finding(\n                title=node["score_description"],\n                test=test,\n                active=not node["pass"],\n                description=description,\n                severity=sel...
    - Finding(\n            title=title + "_" + vulnerability["machineId"],\n            severity=self.severity_check(vulnerability["severity"]),\n            description=description,\n            static_finding=False,\n            dynamic_finding=True,\n        )
    - Finding(\n            title=title + "_" + vulnerability["machineId"],\n            severity=self.severity_check(vulnerability["severity"]),\n            description=description,\n            static_finding=False,\n            dynamic_finding=True,\n        )
    - Finding(\n                        title=associated_vuln["Title"],\n                        description=associated_vuln["Description"],\n                        test=test,\n                        seve...
    - Finding(\n                title=title,\n                test=test,\n                description=findingdetail,\n                severity=sev.title(),\n                mitigation=mitigation,\n         ...
    - Finding(\n        title=vulnerability.get("name")\n        + ": "\n        + package_name\n        + " - "\n        + vulnerability.get("package_version"),\n        test=test,\n        severity=severi...
    - Finding(\n        title=title,\n        test=test,\n        description=full_description,\n        severity=severity,\n        mitigation=mitigation,\n        vuln_id_from_tool=vuln_id_from_tool,\n        static_finding=True,\n        dynamic_finding=False,\n    )
    - Finding(\n                title=vuln["name"],\n                description=html2text.html2text(vuln["desc"].strip())\n                + "\n\n"\n                + html2text.html2text(vuln.get("pluginOu...
    - Finding(\n                title=vulnerability.get("msg"),\n                severity="Info",  # Nikto doesn't assign severity, default to Info\n                description=description,\n               ...
    - Finding(\n                title=titleText,\n                test=test,\n                description=description,\n                severity=severity,\n                dynamic_finding=True,\n           ...
    - Finding(\n                        title=title,\n                        test=test,\n                        description=description,\n                        severity=severity,\n                      ...
    - Finding(\n                    title=vuln_id,\n                    test=test,\n                    description=description,\n                    severity=severity,\n                    component_name=c...
    - Finding(\n                    test=test,\n                    cwe=798,\n                    title=title,\n                    description=description,\n                    severity="High",\n          ...
    - Finding(\n                    test=test,\n                    cwe=798,\n                    title=title,\n                    description=description,\n                    severity="High",\n          ...
    - Finding(\n        title=item_node["title"]\n        + " - "\n        + "("\n        + item_node["module_name"]\n        + ", "\n        + item_node["vulnerable_versions"]\n        + ")",\n        test...
    - Finding(\n        title=title,\n        test=test,\n        severity=severity,\n        description=description,\n        mitigation=mitigation,\n        references=", ".join(references),\n        com...
    - Finding(\n        title=item_node["title"]\n        + " - "\n        + "("\n        + item_node["module"]\n        + ", "\n        + item_node["version"]\n        + ")",\n        test=test,\n        s...
    - logger.debug("Item %s.", str(item))\n            template_id = item.get("templateID", item.get("template-id", ""))\n            info = item.get("info")\n            name = info.get("name")\n          ...
    - Finding(\n                title=f"{name}",\n                test=test,\n                severity=severity,\n                nb_occurences=1,\n                vuln_id_from_tool=template_id,\n            )
    - Finding(\n                    title=title,\n                    description=description,\n                    severity=severity,\n                    references=references,\n                    dynami...
    - Finding(test=test)
