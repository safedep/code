
django:
  django.db.models:
    - models.ForeignKey(Tool_Type, related_name="tool_type", on_delete=models.CASCADE)
    - models.ForeignKey(Tool_Type, related_name="tool_type", on_delete=models.CASCADE)
    - models.CharField(max_length=15,\n                                           choices=(\n                                               ("API", "API Key"),\n                                             ...
    - models.CharField(max_length=255, null=True, blank=True, help_text=_("Additional definitions that will be "\n                                                                              "consumed by scanner"))
    - models.CharField(max_length=200, null=True, blank=True)
    - models.CharField(max_length=600, null=True, blank=True)
    - models.CharField(max_length=200, null=True, blank=True,\n                                  verbose_name=_("Title for SSH/API Key"))
    - models.CharField(max_length=6000, null=True, blank=True)
    - models.CharField(max_length=600, null=True, blank=True,\n                               verbose_name=_("API Key"))
    - class Product_API_Scan_Configuration(models.Model):\n    product = models.ForeignKey(Product, null=False, blank=False, on_delete=models.CASCADE)\n    tool_configuration = models.ForeignKey(Tool_Config...
    - models.ForeignKey(Product, null=False, blank=False, on_delete=models.CASCADE)
    - models.ForeignKey(Product, null=False, blank=False, on_delete=models.CASCADE)
    - models.ForeignKey(Tool_Configuration, null=False, blank=False, on_delete=models.CASCADE)
    - models.ForeignKey(Tool_Configuration, null=False, blank=False, on_delete=models.CASCADE)
    - models.CharField(max_length=200, null=True, blank=True)
    - models.CharField(max_length=200, null=True, blank=True)
    - models.CharField(max_length=200, null=True, blank=True)
    - class Network_Locations(models.Model):\n    location = models.CharField(max_length=500, help_text=_("Location of network testing: Examples: VPN, Internet or Internal."))\n\n    def __str__(self):\n        return self.location
    - models.CharField(max_length=500, help_text=_("Location of network testing: Examples: VPN, Internet or Internal."))
    - class Engagement_Presets(models.Model):\n    title = models.CharField(max_length=500, default=None, help_text=_("Brief description of preset."))\n    test_type = models.ManyToManyField(Test_Type, defa...
    - models.CharField(max_length=500, default=None, help_text=_("Brief description of preset."))
    - models.ManyToManyField(Test_Type, default=None, blank=True)
    - models.ManyToManyField(Network_Locations, default=None, blank=True)
    - models.CharField(max_length=2000, help_text=_("Description of what needs to be tested or setting up environment for testing"), null=True, blank=True)
    - models.CharField(max_length=800, help_text=_("Scope of Engagement testing, IP's/Resources/URL's)"), default=None, blank=True)
    - models.ForeignKey(Product, on_delete=models.CASCADE)
    - models.ForeignKey(Product, on_delete=models.CASCADE)
    - models.DateTimeField(auto_now_add=True, null=False)
    - class Engagement(models.Model):\n    name = models.CharField(max_length=300, null=True, blank=True)\n    description = models.CharField(max_length=2000, null=True, blank=True)\n    version = models.Ch...
    - models.CharField(max_length=300, null=True, blank=True)
    - models.CharField(max_length=2000, null=True, blank=True)
    - models.CharField(max_length=100, null=True, blank=True, help_text=_("Version of the product the engagement tested."))
    - models.DateField(null=True, blank=True)
    - models.DateField(null=False, blank=False)
    - models.DateField(null=False, blank=False)
    - models.ForeignKey(Dojo_User, editable=True, null=True, blank=True, on_delete=models.RESTRICT)
    - models.ForeignKey(Dojo_User, editable=True, null=True, blank=True, on_delete=models.RESTRICT)
    - models.ForeignKey(Contact, null=True, blank=True, on_delete=models.CASCADE)
    - models.ForeignKey(Contact, null=True, blank=True, on_delete=models.CASCADE)
    - models.ForeignKey(Engagement_Presets, null=True, blank=True, help_text=_("Settings and notes for performing this engagement."), on_delete=models.CASCADE)
    - models.ForeignKey(Engagement_Presets, null=True, blank=True, help_text=_("Settings and notes for performing this engagement."), on_delete=models.CASCADE)
    - models.CharField(max_length=2000, null=True, blank=True)
    - models.ForeignKey(Report_Type, null=True, blank=True, on_delete=models.CASCADE)
    - models.ForeignKey(Report_Type, null=True, blank=True, on_delete=models.CASCADE)
    - models.ForeignKey(Product, on_delete=models.CASCADE)
    - models.ForeignKey(Product, on_delete=models.CASCADE)
    - models.DateTimeField(auto_now=True, null=True)
    - models.DateTimeField(auto_now_add=True, null=True)
    - models.BooleanField(default=True, editable=False)
    - models.URLField(max_length=200, help_text=_("Link to epic or ticket system with changes to version."), editable=True, blank=True, null=True)
    - models.URLField(editable=True, blank=True, null=True)
    - models.BooleanField(default=True)
    - models.BooleanField(default=True)
    - models.BooleanField(default=True)
    - models.BooleanField(default=True)
    - models.ManyToManyField(Notes, blank=True, editable=False)
    - models.ManyToManyField(FileUpload, blank=True, editable=False)
    - models.CharField(editable=True, max_length=2000, default="",\n                              null=True,\n                              choices=ENGAGEMENT_STATUS_CHOICES)
    - models.CharField(max_length=100,\n                                default="threat_model", editable=False)
    - models.CharField(max_length=1000, default="none",\n                                   editable=False, blank=True, null=True)
    - models.ManyToManyField("Risk_Acceptance",\n                                             default=None,\n                                             editable=False,\n                                             blank=True)
    - models.BooleanField(default=False, editable=False)
    - models.CharField(editable=True, max_length=30, default="Interactive",\n                                       null=True,\n                                       choices=(("Interactive", "Interactive"),\n                                                ("CI/CD", "CI/CD")))
    - models.CharField(editable=True, max_length=150,\n                                   null=True, blank=True, help_text=_("Build ID of the product the engagement tested."), verbose_name=_("Build ID"))
    - models.CharField(editable=True, max_length=150,\n                                   null=True, blank=True, help_text=_("Commit hash from repo"), verbose_name=_("Commit Hash"))
    - models.CharField(editable=True, max_length=150,\n                                   null=True, blank=True, help_text=_("Tag or branch of the product the engagement tested."), verbose_name=_("Branch/Tag"))
    - models.ForeignKey(Tool_Configuration, verbose_name=_("Build Server"), help_text=_("Build server responsible for CI/CD test"), null=True, blank=True, related_name="build_server", on_delete=models.CASCADE)
    - models.ForeignKey(Tool_Configuration, verbose_name=_("Build Server"), help_text=_("Build server responsible for CI/CD test"), null=True, blank=True, related_name="build_server", on_delete=models.CASCADE)
    - models.ForeignKey(Tool_Configuration, null=True, blank=True, verbose_name=_("SCM Server"), help_text=_("Source code server for CI/CD test"), related_name="source_code_management_server", on_delete=models.CASCADE)
    - models.ForeignKey(Tool_Configuration, null=True, blank=True, verbose_name=_("SCM Server"), help_text=_("Source code server for CI/CD test"), related_name="source_code_management_server", on_delete=models.CASCADE)
    - models.URLField(max_length=600, null=True, blank=True, editable=True, verbose_name=_("Repo"), help_text=_("Resource link to source code"))
    - models.ForeignKey(Tool_Configuration, verbose_name=_("Orchestration Engine"), help_text=_("Orchestration service responsible for CI/CD test"), null=True, blank=True, related_name="orchestration", on_delete=models.CASCADE)
    - models.ForeignKey(Tool_Configuration, verbose_name=_("Orchestration Engine"), help_text=_("Orchestration service responsible for CI/CD test"), null=True, blank=True, related_name="orchestration", on_delete=models.CASCADE)
    - models.BooleanField(default=False, verbose_name=_("Deduplication within this engagement only"), help_text=_("If enabled deduplication will only mark a finding in this engagement as duplicate of anothe...
    - models.Index(fields=["product", "active"])
    - class CWE(models.Model):\n    url = models.CharField(max_length=1000)\n    description = models.CharField(max_length=2000)\n    number = models.IntegerField()
    - models.CharField(max_length=1000)
    - models.CharField(max_length=2000)
    - models.IntegerField()
    - class Endpoint_Params(models.Model):\n    param = models.CharField(max_length=150)\n    value = models.CharField(max_length=150)\n    method_type = (("GET", "GET"),\n                   ("POST", "POST"))\n    method = models.CharField(max_length=20, blank=False, null=True, choices=method_type)
    - models.CharField(max_length=150)
    - models.CharField(max_length=150)
    - models.CharField(max_length=20, blank=False, null=True, choices=method_type)
    - class Endpoint_Status(models.Model):\n    date = models.DateField(default=get_current_date)\n    last_modified = models.DateTimeField(null=True, editable=False, default=get_current_datetime)\n    miti...
    - models.DateField(default=get_current_date)
    - models.DateTimeField(null=True, editable=False, default=get_current_datetime)
    - models.BooleanField(default=False, blank=True)
    - models.DateTimeField(editable=False, null=True, blank=True)
    - models.ForeignKey(Dojo_User, editable=True, null=True, on_delete=models.RESTRICT)
    - models.ForeignKey(Dojo_User, editable=True, null=True, on_delete=models.RESTRICT)
    - models.BooleanField(default=False, blank=True)
    - models.BooleanField(default=False, blank=True)
    - models.BooleanField(default=False, blank=True)
    - models.ForeignKey("Endpoint", null=False, blank=False, on_delete=models.CASCADE, related_name="status_endpoint")
    - models.ForeignKey("Endpoint", null=False, blank=False, on_delete=models.CASCADE, related_name="status_endpoint")
    - models.ForeignKey("Finding", null=False, blank=False, on_delete=models.CASCADE, related_name="status_finding")
    - models.ForeignKey("Finding", null=False, blank=False, on_delete=models.CASCADE, related_name="status_finding")
    - models.Index(fields=["finding", "mitigated"])
    - models.Index(fields=["endpoint", "mitigated"])
    - models.UniqueConstraint(fields=["finding", "endpoint"], name="endpoint-finding relation")
    - class Endpoint(models.Model):\n    protocol = models.CharField(null=True, blank=True, max_length=20,\n                                 help_text=_("The communication protocol/scheme such as 'http', 'f...
    - models.CharField(null=True, blank=True, max_length=20,\n                                 help_text=_("The communication protocol/scheme such as 'http', 'ftp', 'dns', etc."))
    - models.CharField(null=True, blank=True, max_length=500,\n                              help_text=_("User info as 'alice', 'bob', etc."))
    - models.CharField(null=True, blank=True, max_length=500,\n                            help_text=_("The host name or IP address. It must not include the port number. "\n                                      "For example '127.0.0.1', 'localhost', 'yourdomain.com'."))
    - models.IntegerField(null=True, blank=True,\n                               help_text=_("The network port associated with the endpoint."))
    - models.CharField(null=True, blank=True, max_length=500,\n                            help_text=_("The location of the resource, it must not start with a '/'. For example "\n                                      "endpoint/420/edit"))
    - models.CharField(null=True, blank=True, max_length=1000,\n                             help_text=_("The query string, the question mark should be omitted."\n                                       "For example 'group=4&team=8'"))
    - models.CharField(null=True, blank=True, max_length=500,\n                                help_text=_("The fragment identifier which follows the hash mark. The hash mark should "\n                                          "be omitted. For example 'section-13', 'paragraph-2'."))
    - models.ForeignKey(Product, null=True, blank=True, on_delete=models.CASCADE)
    - models.ForeignKey(Product, null=True, blank=True, on_delete=models.CASCADE)
    - models.ManyToManyField(Endpoint_Params, blank=True, editable=False)
    - models.ManyToManyField("Finding",\n                                      blank=True,\n                                      verbose_name=_("Findings"),\n                                      through=Endpoint_Status)
    - models.Index(fields=["product"])
    - class Development_Environment(models.Model):\n    name = models.CharField(max_length=200)\n\n    def __str__(self):\n        return self.name\n\n    def get_breadcrumbs(self):\n        return [{"title": str(self),\n                 "url": reverse("edit_dev_env", args=(self.id,))}]
    - models.CharField(max_length=200)
    - class Sonarqube_Issue(models.Model):\n    key = models.CharField(max_length=60, unique=True, help_text=_("SonarQube issue key"))\n    status = models.CharField(max_length=20, help_text=_("SonarQube is...
    - models.CharField(max_length=60, unique=True, help_text=_("SonarQube issue key"))
    - models.CharField(max_length=20, help_text=_("SonarQube issue status"))
    - models.CharField(max_length=20, help_text=_("SonarQube issue type"))
    - class Sonarqube_Issue_Transition(models.Model):\n    sonarqube_issue = models.ForeignKey(Sonarqube_Issue, on_delete=models.CASCADE, db_index=True)\n    created = models.DateTimeField(auto_now_add=True...
    - models.ForeignKey(Sonarqube_Issue, on_delete=models.CASCADE, db_index=True)
    - models.ForeignKey(Sonarqube_Issue, on_delete=models.CASCADE, db_index=True)
    - models.DateTimeField(auto_now_add=True, null=False)
    - models.CharField(max_length=100)
    - models.CharField(max_length=50)
    - models.CharField(max_length=100)
    - class Test(models.Model):\n    engagement = models.ForeignKey(Engagement, editable=False, on_delete=models.CASCADE)\n    lead = models.ForeignKey(Dojo_User, editable=True, null=True, blank=True, on_de...
    - models.ForeignKey(Engagement, editable=False, on_delete=models.CASCADE)
    - models.ForeignKey(Engagement, editable=False, on_delete=models.CASCADE)
    - models.ForeignKey(Dojo_User, editable=True, null=True, blank=True, on_delete=models.RESTRICT)
    - models.ForeignKey(Dojo_User, editable=True, null=True, blank=True, on_delete=models.RESTRICT)
    - models.ForeignKey(Test_Type, on_delete=models.CASCADE)
    - models.ForeignKey(Test_Type, on_delete=models.CASCADE)
    - models.TextField(null=True)
    - models.CharField(max_length=255, null=True, blank=True)
    - models.TextField(null=True, blank=True)
    - models.DateTimeField()
    - models.DateTimeField()
    - models.TimeField(null=True, blank=True, editable=False)
    - models.TimeField(null=True, blank=True, editable=False)
    - models.IntegerField(null=True, blank=True,\n                                           editable=True)
    - models.ManyToManyField(Notes, blank=True,\n                                   editable=False)
    - models.ManyToManyField(FileUpload, blank=True, editable=False)
    - models.ForeignKey(Development_Environment, null=True,\n                                    blank=False, on_delete=models.RESTRICT)
    - models.ForeignKey(Development_Environment, null=True,\n                                    blank=False, on_delete=models.RESTRICT)
    - models.DateTimeField(auto_now=True, null=True)
    - models.DateTimeField(auto_now_add=True, null=True)
    - models.CharField(max_length=100, null=True, blank=True)
    - models.CharField(editable=True, max_length=150,\n                                   null=True, blank=True, help_text=_("Build ID that was tested, a reimport may update this field."), verbose_name=_("Build ID"))
    - models.CharField(editable=True, max_length=150,\n                                   null=True, blank=True, help_text=_("Commit hash tested, a reimport may update this field."), verbose_name=_("Commit Hash"))
    - models.CharField(editable=True, max_length=150,\n                                   null=True, blank=True, help_text=_("Tag or branch that was tested, a reimport may update this field."), verbose_name=_("Branch/Tag"))
    - models.ForeignKey(Product_API_Scan_Configuration, null=True, editable=True, blank=True, on_delete=models.CASCADE, verbose_name=_("API Scan Configuration"))
    - models.ForeignKey(Product_API_Scan_Configuration, null=True, editable=True, blank=True, on_delete=models.CASCADE, verbose_name=_("API Scan Configuration"))
    - models.Index(fields=["engagement", "test_type"])
    - models.ForeignKey(Test, editable=False, null=False, blank=False, on_delete=models.CASCADE)
    - models.ForeignKey(Test, editable=False, null=False, blank=False, on_delete=models.CASCADE)
    - models.ManyToManyField("Finding", through="Test_Import_Finding_Action")
    - models.CharField(max_length=64, null=False, blank=False, default="unknown")
    - models.CharField(max_length=100, null=True, blank=True)
    - models.CharField(editable=True, max_length=150,\n                                   null=True, blank=True, help_text=_("Build ID that was tested, a reimport may update this field."), verbose_name=_("Build ID"))
    - models.CharField(editable=True, max_length=150,\n                                   null=True, blank=True, help_text=_("Commit hash tested, a reimport may update this field."), verbose_name=_("Commit Hash"))
    - models.CharField(editable=True, max_length=150,\n                                   null=True, blank=True, help_text=_("Tag or branch that was tested, a reimport may update this field."), verbose_name=_("Branch/Tag"))
    - models.Index(fields=["created", "test", "type"])
    - models.ForeignKey(Test_Import, editable=False, null=False, blank=False, on_delete=models.CASCADE)
    - models.ForeignKey(Test_Import, editable=False, null=False, blank=False, on_delete=models.CASCADE)
    - models.ForeignKey("Finding", editable=False, null=False, blank=False, on_delete=models.CASCADE)
    - models.ForeignKey("Finding", editable=False, null=False, blank=False, on_delete=models.CASCADE)
    - models.CharField(max_length=100, null=True, blank=True, choices=IMPORT_ACTIONS)
    - models.Index(fields=["finding", "action", "test_import"])
    - class Finding(models.Model):\n    title = models.CharField(max_length=511,\n                             verbose_name=_("Title"),\n                             help_text=_("A short description of the ...
    - models.CharField(max_length=511,\n                             verbose_name=_("Title"),\n                             help_text=_("A short description of the flaw."))
    - models.DateField(default=get_current_date,\n                            verbose_name=_("Date"),\n                            help_text=_("The date the flaw was discovered."))
    - models.DateField(\n                            blank=True,\n                            null=True,\n                            verbose_name=_("SLA Start Date"),\n                            help_text...
    - models.DateField(\n                            blank=True,\n                            null=True,\n                            verbose_name=_("SLA Expiration Date"),\n                            help...
