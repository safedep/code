
django:
  django.urls.re_path:
    - re_path(r"^tool_type/add", views.new_tool_type, name="add_tool_type")
    - re_path(r"^tool_type/(?P<ttid>\d+)/edit$", views.edit_tool_type,\n        name="edit_tool_type")
    - re_path(r"^tool_type$", views.tool_type, name="tool_type")
    - re_path(r"^{}api/v2/".format(get_system_setting("url_prefix")), include(v2_api.urls))
    - re_path(r"^{}api/v2/user_profile/".format(get_system_setting("url_prefix")), UserProfileView.as_view(), name="user_profile")
    - re_path(\n                f"^{get_system_setting('url_prefix')}api/v2/api-token-auth/",\n                tokenviews.obtain_auth_token,\n                name="api-token-auth",\n            )
    - re_path(r"^{}history/(?P<cid>\d+)/(?P<oid>\d+)$".format(get_system_setting("url_prefix")), views.action_history, name="action_history")
    - re_path(r"^{}".format(get_system_setting("url_prefix")), include(ur))
    - re_path(r"^{}api/v2/oa3/schema/".format(get_system_setting("url_prefix")), SpectacularAPIView.as_view(), name="schema_oa3")
    - re_path(r"^{}api/v2/oa3/swagger-ui/".format(get_system_setting("url_prefix")), SpectacularSwaggerView.as_view(url=get_system_setting("url_prefix") + "/api/v2/oa3/schema/?format=json"), name="swagger-ui_oa3")
    - re_path(r"^robots.txt", lambda _: HttpResponse("User-Agent: *\nDisallow: /", content_type="text/plain"), name="robots_file")
    - re_path(r"^manage_files/(?P<oid>\d+)/(?P<obj_type>\w+)$", views.manage_files, name="manage_files")
    - re_path(r"^access_file/(?P<fid>\d+)/(?P<oid>\d+)/(?P<obj_type>\w+)$", views.access_file, name="access_file")
    - re_path(r"^{}/(?P<path>.*)$".format(settings.MEDIA_URL.strip("/")), views.protected_serve, {"document_root": settings.MEDIA_ROOT})
    - re_path(r"^{}django_metrics/".format(get_system_setting("url_prefix")), include("django_prometheus.urls"))
    - re_path(r"^saml2/", include("djangosaml2.urls"))
    - re_path(r"^{}admin/".format(get_system_setting("url_prefix")), admin.site.urls)
    - re_path("", include("social_django.urls", namespace="social"))
    - re_path(r"^login$", views.login_view, name="login")
    - re_path(r"^logout$", views.logout_view, name="logout")
    - re_path(r"^alerts$", views.alerts, name="alerts")
    - re_path(r"^alerts/json$", views.alerts_json, name="alerts_json")
    - re_path(r"^alerts/count$", views.alertcount, name="alertcount")
    - re_path(r"^delete_alerts$", views.delete_alerts, name="delete_alerts")
    - re_path(r"^profile$", views.view_profile, name="view_profile")
    - re_path(r"^change_password$", views.change_password, name="change_password")
    - re_path(r"^user$", views.user, name="users")
    - re_path(r"^user/add$", views.add_user, name="add_user")
    - re_path(r"^user/(?P<uid>\d+)$", views.view_user, name="view_user")
    - re_path(r"^user/(?P<uid>\d+)/edit$", views.edit_user, name="edit_user")
    - re_path(r"^user/(?P<uid>\d+)/delete", views.delete_user, name="delete_user")
    - re_path(r"^user/(?P<uid>\d+)/add_product_type_member$", views.add_product_type_member, name="add_product_type_member_user")
    - re_path(r"^user/(?P<uid>\d+)/add_product_member$", views.add_product_member, name="add_product_member_user")
    - re_path(r"^user/(?P<uid>\d+)/add_group_member$", views.add_group_member, name="add_group_member_user")
    - re_path(r"^user/(?P<uid>\d+)/edit_permissions$", views.edit_permissions, name="edit_user_permissions")
    - re_path(r"^password_reset/$", views.DojoPasswordResetView.as_view(\n            template_name="login/password_reset.html",\n        ), name="password_reset")
    - re_path(r"^password_reset/done/$", auth_views.PasswordResetDoneView.as_view(\n            template_name="login/password_reset_done.html",\n        ), name="password_reset_done")
    - re_path(r"^reset/(?P<uidb64>[0-9A-Za-z_\-]+)/(?P<token>[0-9A-Za-z]{1,13}-[0-9A-Za-z]{1,40})/$", auth_views.PasswordResetConfirmView.as_view(\n            template_name="login/password_reset_confirm.html",\n        ), name="password_reset_confirm")
    - re_path(r"^reset/done/$", auth_views.PasswordResetCompleteView.as_view(\n            template_name="login/password_reset_complete.html",\n        ), name="password_reset_complete")
    - re_path(r"^forgot_username_done/$", auth_views.PasswordResetDoneView.as_view(\n            template_name="login/forgot_username_done.html",\n        ), name="forgot_username_done")
    - re_path(r"^forgot_username/$", views.DojoForgotUsernameView.as_view(\n            template_name="login/forgot_username.html",\n            success_url=reverse_lazy("forgot_username_done"),\n        ), name="forgot_username")
    - re_path(r"^api/key-v2$", views.api_v2_key, name="api_v2_key")
  django.core.exceptions.PermissionDenied:
    - PermissionDenied(msg)
    - PermissionDenied(msg)
    - PermissionDenied(msg)
    - PermissionDenied(msg)
    - PermissionDenied(msg)
    - PermissionDenied(msg)
    - PermissionDenied(msg)
    - PermissionDenied(msg)
    - PermissionDenied(msg)
    - PermissionDenied(msg)
    - PermissionDenied(msg)
    - PermissionDenied(msg)
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - finding = self.get_finding(finding_id)\n        # Make sure the user is authorized\n        user_has_permission_or_403(request.user, finding, Permissions.Finding_Delete)\n        # Get the finding for...
    - finding = get_object_or_404(Finding, id=fid)\n    if request.method == "POST":\n        form = FindingFormID(request.POST, instance=finding)\n        if form.is_valid():\n            finding = apply_c...
    - raise PermissionDenied
    - raise PermissionDenied
    - finding = get_object_or_404(Stub_Finding, id=fid)\n\n    if request.method == "POST":\n        form = DeleteStubFindingForm(request.POST, instance=finding)\n        if form.is_valid():\n            ti...
    - template = get_object_or_404(Finding_Template, id=tid)\n    if request.method == "POST":\n        form = DeleteFindingTemplateForm(request.POST, instance=template)\n        if form.is_valid():\n      ...
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - form = self.get_form(request)\n        if form.is_valid():\n            self._set_state(request)\n            return render(request, self.get_template(), self.get_context())\n        raise PermissionDenied
    - if self.report_format == "HTML":\n            return "dojo/custom_html_report.html"\n        raise PermissionDenied
    - raise PermissionDenied
    - messages.add_message(\n                request,\n                messages.ERROR,\n                "You must be authorized to answer questionnaire. Otherwise, enable anonymous response in system settings.",\n                extra_tags="alert-danger")\n            raise PermissionDenied
    - raise PermissionDenied
    - messages.add_message(\n                request,\n                messages.ERROR,\n                "You must be logged in to answer questionnaire. Otherwise, enable anonymous response in system setting...
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
    - raise PermissionDenied
  django.shortcuts.get_object_or_404:
    - get_object_or_404(Notes.objects, id=request.data["note_id"])
    - get_object_or_404(\n            DojoMeta.objects, finding=finding, name=name,\n        )
    - get_object_or_404(Engagement.objects, pk=engagement_id)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(\n        Cred_Mapping.objects.select_related("cred_id"), id=ttid)
    - get_object_or_404(\n        Cred_Mapping.objects.select_related("cred_id"), id=ttid)
    - get_object_or_404(\n        Cred_Mapping.objects.select_related("cred_id"), id=ttid)
    - get_object_or_404(\n        Cred_Mapping.objects.select_related("cred_id"), id=ttid)
    - get_object_or_404(\n        Cred_Mapping.objects.select_related("cred_id"), id=ttid)
    - get_object_or_404(Product, pk=pid)
    - get_object_or_404(\n        Cred_Mapping.objects.select_related("cred_id"), id=ttid)
    - get_object_or_404(Engagement, pk=eid)
    - get_object_or_404(Product, pk=pid)
    - get_object_or_404(Engagement, pk=eid)
    - get_object_or_404(Test, pk=tid)
    - get_object_or_404(Finding, pk=fid)
    - get_object_or_404(Product, id=id)
    - get_object_or_404(Engagement, id=id)
    - get_object_or_404(Test, id=id)
    - get_object_or_404(Finding, id=id)
    - get_object_or_404(Development_Environment, pk=deid)
    - get_object_or_404(Product, id=p[0])
    - get_object_or_404(Endpoint, id=eid)
    - get_object_or_404(Endpoint, id=eid)
    - get_object_or_404(Endpoint, pk=eid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(DojoMeta, id=cfv_id)
    - get_object_or_404(DojoMeta, id=cfv_id)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Engagement, pk=eid)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Engagement, id=engagement_id)
    - get_object_or_404(Product, id=product_id)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Risk_Acceptance, pk=raid)
    - get_object_or_404(Engagement, pk=eid)
    - get_object_or_404(Notes, pk=request.POST["delete_note_id"])
    - get_object_or_404(\n                Finding, pk=request.POST["remove_finding_id"])
    - get_object_or_404(prefetch_for_expiration(Risk_Acceptance.objects.all()), pk=raid)
    - get_object_or_404(Engagement, pk=eid)
    - get_object_or_404(prefetch_for_expiration(Risk_Acceptance.objects.all()), pk=raid)
    - get_object_or_404(Engagement, pk=eid)
    - get_object_or_404(Risk_Acceptance, pk=raid)
    - get_object_or_404(Engagement, pk=eid)
    - get_object_or_404(Risk_Acceptance, pk=raid)
    - get_object_or_404(Engagement, pk=eid)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Product, id=product_id)
    - get_object_or_404(Engagement, id=engagement_id)
    - get_object_or_404(Endpoint, id=endpoint_id)
    - get_object_or_404(finding_qs, id=finding_id)
    - get_object_or_404(Dojo_User, id=user.id)
    - get_object_or_404(Finding, id=finding_id)
    - get_object_or_404(Finding, id=finding_id)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Dojo_User, id=request.user.id)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Dojo_User, id=request.user.id)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Dojo_User, id=request.user.id)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Test, id=finding.test.id)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Finding_Template, id=tid)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Finding_Template, id=tid)
    - get_object_or_404(Test, id=tid)
    - get_object_or_404(Stub_Finding, id=fid)
    - get_object_or_404(Stub_Finding, id=fid)
    - get_object_or_404(Finding_Template, id=tid)
    - get_object_or_404(Finding_Template, id=tid)
    - get_object_or_404(Product, pk=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Finding, id=original_id)
    - get_object_or_404(Finding, id=duplicate_id)
    - get_object_or_404(Finding, id=duplicate_id)
    - get_object_or_404(Finding, id=finding_id)
    - get_object_or_404(Finding, id=new_original_id)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(Finding, id=fid)
    - get_object_or_404(GITHUB_Conf, pk=tid)
    - get_object_or_404(Dojo_Group, id=group_id)
    - get_object_or_404(Dojo_Group, id=group_id)
    - get_object_or_404(Dojo_Group, id=group_id)
    - get_object_or_404(Dojo_Group, id=gid)
    - get_object_or_404(Dojo_Group_Member, pk=mid)
    - get_object_or_404(Dojo_Group_Member, pk=mid)
    - get_object_or_404(Dojo_Group, id=gid)
    - get_object_or_404(Dojo_Group, id=gid)
    - get_object_or_404(Dojo_Group, id=gid)
    - get_object_or_404(JIRA_Instance, pk=tid)
    - get_object_or_404(JIRA_Instance, pk=tid)
    - get_object_or_404(Dojo_User, pk=eid)
    - get_object_or_404(Note_Type, pk=ntid)
    - get_object_or_404(Note_Type, pk=ntid)
    - get_object_or_404(Note_Type, pk=ntid)
    - get_object_or_404(Notes, id=id)
    - get_object_or_404(Engagement, id=objid)
    - get_object_or_404(Test, id=objid)
    - get_object_or_404(Finding, id=objid)
    - get_object_or_404(Cred_User, id=objid)
    - get_object_or_404(Notes, id=id)
    - get_object_or_404(Engagement, id=objid)
    - get_object_or_404(Test, id=objid)
    - get_object_or_404(Finding, id=objid)
    - get_object_or_404(Notes, id=id)
    - get_object_or_404(Engagement, id=objid)
    - get_object_or_404(Test, id=objid)
    - get_object_or_404(Finding, id=objid)
    - get_object_or_404(Notification_Webhooks, id=nwhid)
    - get_object_or_404(Notification_Webhooks, id=nwhid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(prod_query, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product_Type, pk=ptid)
    - get_object_or_404(Product, pk=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(App_Analysis, id=tid)
    - get_object_or_404(App_Analysis, id=tid)
    - get_object_or_404(DojoMeta, id=cfv_id)
    - get_object_or_404(DojoMeta, id=cfv_id)
    - get_object_or_404(Product, id=product_id)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Engagement_Presets, id=eid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Engagement_Presets, id=eid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, pk=pid)
    - get_object_or_404(Product_Member, pk=memberid)
    - get_object_or_404(Product_Member, pk=memberid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product_API_Scan_Configuration, id=pascid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product_API_Scan_Configuration, id=pascid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product_Group, pk=groupid)
    - get_object_or_404(Product_Group, pk=groupid)
    - get_object_or_404(Product, pk=pid)
    - get_object_or_404(Product_Type, pk=ptid)
    - get_object_or_404(Product_Type, pk=ptid)
    - get_object_or_404(Product_Type, pk=ptid)
    - get_object_or_404(Product_Type, pk=ptid)
    - get_object_or_404(Product_Type_Member, pk=memberid)
    - get_object_or_404(Product_Type_Member, pk=memberid)
    - get_object_or_404(Product_Type, pk=ptid)
    - get_object_or_404(Product_Type_Group, pk=groupid)
    - get_object_or_404(Product_Type_Group, pk=groupid)
    - get_object_or_404(Product_Type, id=ptid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Test, id=tid)
    - get_object_or_404(Endpoint, id=eid)
    - get_object_or_404(Endpoint, id=eid)
    - get_object_or_404(Product.objects.all().prefetch_related("engagement_set__test_set__test_type", "engagement_set__test_set__environment"), id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Test, id=tid)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Answered_Survey, id=sid)
    - get_object_or_404(Answered_Survey, id=sid)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Answered_Survey, id=sid)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Answered_Survey, id=sid)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Engagement, id=eid)
    - get_object_or_404(Engagement_Survey, id=sid)
    - get_object_or_404(Engagement_Survey, id=sid)
    - get_object_or_404(Engagement_Survey, id=sid)
    - get_object_or_404(Answered_Survey, id=esid)
    - get_object_or_404(Answered_Survey, id=esid)
    - get_object_or_404(General_Survey, id=esid)
    - get_object_or_404(General_Survey, id=esid)
    - get_object_or_404(Engagement_Survey, id=general_survey.survey_id)
    - get_object_or_404(Answered_Survey, id=esid)
    - get_object_or_404(Answered_Survey, id=esid)
    - get_object_or_404(Answered_Survey, id=esid)
    - get_object_or_404(test_prefetched, pk=test_id)
    - get_object_or_404(Test, pk=tid)
    - get_object_or_404(Test, pk=tid)
    - get_object_or_404(Test, id=tid)
    - get_object_or_404(Test, id=tid)
    - get_object_or_404(Test, id=test_id)
    - get_object_or_404(Test, id=tid)
    - get_object_or_404(Finding_Template, id=fid)
    - get_object_or_404(Test, id=tid)
    - get_object_or_404(Test, id=test_id)
    - get_object_or_404(Test_Type, pk=ptid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Product, id=pid)
    - get_object_or_404(Dojo_User, pk=request.user.id)
    - get_object_or_404(Dojo_User, pk=request.user.id)
    - get_object_or_404(Dojo_User, id=uid)
    - get_object_or_404(Dojo_User, id=uid)
    - get_object_or_404(Dojo_User, id=uid)
    - get_object_or_404(Dojo_User, id=uid)
    - get_object_or_404(Dojo_User, id=uid)
    - get_object_or_404(Dojo_User, id=uid)
    - get_object_or_404(Dojo_User, id=uid)
    - get_object_or_404(Product, id=product_id)
    - get_object_or_404(Engagement, pk=oid)
    - get_object_or_404(Test, pk=oid)
    - get_object_or_404(Finding, pk=oid)
    - get_object_or_404(FileUpload, pk=fid)
    - get_object_or_404(Engagement, pk=oid)
    - get_object_or_404(Test, pk=oid)
    - get_object_or_404(Finding, pk=oid)
  django.db.models:
    - isinstance(field, models.CharField | models.TextField)
    - isinstance(field, models.CharField | models.TextField)
    - models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')
    - models.CharField(default='', max_length=100)
    - models.CharField(max_length=2000, null=True)
    - models.URLField(max_length=2000, null=True)
    - models.CharField(default='Generic', max_length=100)
    - models.CharField(default='icon-user-check', max_length=25)
    - models.DateTimeField(default=django.utils.timezone.now, editable=False)
    - models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')
    - models.CharField(max_length=200)
    - models.IntegerField(blank=True, null=True, verbose_name='Confidence level')
    - models.CharField(blank=True, max_length=200, null=True, verbose_name='Version Number')
