
django:
  django.contrib.admin:
    - class NotificationsAdmin(admin.ModelAdmin):\n    list_filter = ("user", "product")\n\n    def get_list_display(self, request):\n        list_fields = ["user", "product"]\n        list_fields += [field...
    - tagulous.admin.register(Product.tags)
    - tagulous.admin.register(Test.tags)
    - tagulous.admin.register(Test.inherited_tags)
    - tagulous.admin.register(Finding.tags)
    - tagulous.admin.register(Finding.inherited_tags)
    - tagulous.admin.register(Engagement.tags)
    - tagulous.admin.register(Engagement.inherited_tags)
    - tagulous.admin.register(Endpoint.tags)
    - tagulous.admin.register(Endpoint.inherited_tags)
    - tagulous.admin.register(Finding_Template.tags)
    - tagulous.admin.register(App_Analysis.tags)
    - tagulous.admin.register(Objects_Product.tags)
    - admin.site.register(Benchmark_Type)
    - admin.site.register(Benchmark_Requirement)
    - admin.site.register(Benchmark_Category)
    - admin.site.register(Benchmark_Product)
    - admin.site.register(Benchmark_Product_Summary)
    - admin.site.register(Testing_Guide_Category)
    - admin.site.register(Testing_Guide)
    - admin.site.register(Engagement_Presets)
    - admin.site.register(Network_Locations)
    - admin.site.register(Objects_Product)
    - admin.site.register(Objects_Review)
    - admin.site.register(Languages)
    - admin.site.register(Language_Type)
    - admin.site.register(App_Analysis)
    - admin.site.register(Test)
    - admin.site.register(Finding, FindingAdmin)
    - admin.site.register(FileUpload)
    - admin.site.register(FileAccessToken)
    - admin.site.register(Stub_Finding)
    - admin.site.register(Engagement)
    - admin.site.register(Risk_Acceptance)
    - admin.site.register(Check_List)
    - admin.site.register(Test_Type)
    - admin.site.register(Endpoint_Params)
    - admin.site.register(Endpoint_Status)
    - admin.site.register(Endpoint)
    - admin.site.register(Product)
    - admin.site.register(Product_Type)
    - admin.site.register(UserContactInfo)
    - admin.site.register(Notes)
    - admin.site.register(Note_Type)
    - admin.site.register(Alerts)
    - admin.site.register(JIRA_Issue)
    - admin.site.register(JIRA_Instance, JIRA_Instance_Admin)
    - admin.site.register(JIRA_Project)
    - admin.site.register(GITHUB_Conf)
    - admin.site.register(GITHUB_Issue)
    - admin.site.register(GITHUB_Clone)
    - admin.site.register(GITHUB_Details_Cache)
    - admin.site.register(GITHUB_PKey)
    - admin.site.register(Tool_Configuration, Tool_Configuration_Admin)
    - admin.site.register(Notification_Webhooks)
    - admin.site.register(Tool_Product_Settings)
    - admin.site.register(Tool_Type)
    - admin.site.register(Cred_User)
    - admin.site.register(Cred_Mapping)
    - admin.site.register(System_Settings, System_SettingsAdmin)
    - admin.site.register(SLA_Configuration)
    - admin.site.register(CWE)
    - admin.site.register(Regulation)
    - admin.site.register(Global_Role)
    - admin.site.register(Role)
    - admin.site.register(Dojo_Group)
    - admin.site.register(Sonarqube_Issue)
    - admin.site.register(Sonarqube_Issue_Transition)
    - admin.site.register(Dojo_Group_Member)
    - admin.site.register(Product_Member)
    - admin.site.register(Product_Group)
    - admin.site.register(Product_Type_Member)
    - admin.site.register(Product_Type_Group)
    - admin.site.register(Contact)
    - admin.site.register(NoteHistory)
    - admin.site.register(Product_Line)
    - admin.site.register(Report_Type)
    - admin.site.register(DojoMeta)
    - admin.site.register(Product_API_Scan_Configuration)
    - admin.site.register(Development_Environment)
    - admin.site.register(Finding_Template)
    - admin.site.register(Vulnerability_Id)
    - admin.site.register(Vulnerability_Id_Template)
    - admin.site.register(BurpRawRequestResponse)
    - admin.site.register(Announcement)
    - admin.site.register(UserAnnouncement)
    - admin.site.register(BannerConf)
    - admin.site.register(Notifications, NotificationsAdmin)
    - admin.site.register(Tool_Product_History)
    - admin.site.register(General_Survey)
    - admin.site.register(Test_Import)
    - admin.site.register(Test_Import_Finding_Action)
    - admin.site.register(Finding_Group)
    - admin.autodiscover()
    - admin.autodiscover()
    - re_path(r"^{}admin/".format(get_system_setting("url_prefix")), admin.site.urls)
  django.db.models.IntegerField:
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
    - IntegerField()
  django.forms.Widget aliased as form_widget:
    - class Div(form_widget):\n    def __init__(self, attrs=None):\n        # Use slightly better defaults than HTML's 20x2 box\n        default_attrs = {"style": "width:100%;min-height:400px"}\n        if ...
  django.utils.html.strip_tags:
    - strip_tags(rule_description)
  django.db.models.fields.related:
    - isinstance(field, related.ManyToManyDescriptor)
    - isinstance(field, related.ForwardManyToOneDescriptor)
  django.utils.html.escape:
    - escape(prod.name)
    - escape(prod.name)
    - escape(self.sast_source_file_path)
    - escape(self.file_path)
    - escape(created_question._get_pk_val())
    - escape(created_question.text)
    - escape(choice._get_pk_val())
    - escape(choice.label)
    - escape(info)
    - escape(\n            name)
    - escape(parts[0])
    - escape(parts[1])
    - escape(parts[0])
    - escape(dict_.urlencode())
  django.contrib.auth.views aliased as auth_views:
    - auth_views.PasswordResetDoneView.as_view(\n            template_name="login/password_reset_done.html",\n        )
    - auth_views.PasswordResetConfirmView.as_view(\n            template_name="login/password_reset_confirm.html",\n        )
    - auth_views.PasswordResetCompleteView.as_view(\n            template_name="login/password_reset_complete.html",\n        )
    - auth_views.PasswordResetDoneView.as_view(\n            template_name="login/forgot_username_done.html",\n        )
  django.urls.re_path:
    - re_path(\n        r"^configure_announcement$",\n        views.configure_announcement,\n        name="configure_announcement",\n    )
    - re_path(\n        r"^dismiss_announcement$",\n        views.dismiss_announcement,\n        name="dismiss_announcement",\n    )
    - re_path(r"^components$", views.components, name="components")
    - re_path(r"^cred/add", views.new_cred, name="add_cred")
    - re_path(r"^cred/(?P<ttid>\d+)/view$", views.view_cred_details, name="view_cred_details")
    - re_path(r"^cred/(?P<ttid>\d+)/edit$", views.edit_cred, name="edit_cred")
    - re_path(r"^cred/(?P<ttid>\d+)/delete$", views.delete_cred, name="delete_cred")
    - re_path(r"^cred$", views.cred, name="cred")
    - re_path(r"^product/(?P<pid>\d+)/cred/add$", views.new_cred_product, name="new_cred_product")
    - re_path(r"^product/(?P<pid>\d+)/cred/all$", views.all_cred_product, name="all_cred_product")
    - re_path(r"^product/(?P<pid>\d+)/cred/(?P<ttid>\d+)/edit$", views.edit_cred_product, name="edit_cred_product")
    - re_path(r"^product/(?P<pid>\d+)/cred/(?P<ttid>\d+)/view$", views.view_cred_product, name="view_cred_product")
    - re_path(r"^product/(?P<pid>\d+)/cred/(?P<ttid>\d+)/delete$", views.delete_cred_product, name="delete_cred_product")
    - re_path(r"^engagement/(?P<eid>\d+)/cred/add$", views.new_cred_product_engagement, name="new_cred_product_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/cred/(?P<ttid>\d+)/view$", views.view_cred_product_engagement,\n        name="view_cred_product_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/cred/(?P<ttid>\d+)/delete$", views.delete_cred_engagement,\n        name="delete_cred_engagement")
    - re_path(r"^test/(?P<tid>\d+)/cred/add$", views.new_cred_engagement_test, name="new_cred_engagement_test")
    - re_path(r"^test/(?P<tid>\d+)/cred/(?P<ttid>\d+)/view$", views.view_cred_engagement_test,\n        name="view_cred_engagement_test")
    - re_path(r"^test/(?P<tid>\d+)/cred/(?P<ttid>\d+)/delete$", views.delete_cred_test, name="delete_cred_test")
    - re_path(r"^finding/(?P<fid>\d+)/cred/add$", views.new_cred_finding, name="new_cred_finding")
    - re_path(r"^finding/(?P<fid>\d+)/cred/(?P<ttid>\d+)/view$", views.view_cred_finding, name="view_cred_finding")
    - re_path(r"^finding/(?P<fid>\d+)/cred/(?P<ttid>\d+)/delete$", views.delete_cred_finding, name="delete_cred_finding")
    - re_path(r"^dev_env$", views.dev_env, name="dev_env")
    - re_path(r"^dev_env/add$", views.add_dev_env,\n        name="add_dev_env")
    - re_path(r"^dev_env/(?P<deid>\d+)/edit$",\n        views.edit_dev_env, name="edit_dev_env")
    - re_path(r"^endpoint$", views.all_endpoints,\n        name="endpoint")
    - re_path(r"^endpoint/host$", views.all_endpoint_hosts,\n        name="endpoint_host")
    - re_path(r"^endpoint/vulnerable$", views.vulnerable_endpoints,\n        name="vulnerable_endpoints")
    - re_path(r"^endpoint/host/vulnerable$", views.vulnerable_endpoint_hosts,\n        name="vulnerable_endpoint_hosts")
    - re_path(r"^endpoint/(?P<eid>\d+)$", views.view_endpoint,\n        name="view_endpoint")
    - re_path(r"^endpoint/host/(?P<eid>\d+)$", views.view_endpoint_host,\n        name="view_endpoint_host")
    - re_path(r"^endpoint/(?P<eid>\d+)/edit$", views.edit_endpoint,\n        name="edit_endpoint")
    - re_path(r"^endpoints/(?P<pid>\d+)/add$", views.add_endpoint,\n        name="add_endpoint")
    - re_path(r"^endpoint/(?P<eid>\d+)/delete$", views.delete_endpoint,\n        name="delete_endpoint")
    - re_path(r"^endpoints/add$", views.add_product_endpoint,\n        name="add_product_endpoint")
    - re_path(r"^endpoint/(?P<eid>\d+)/add_meta_data$", views.add_meta_data,\n        name="add_endpoint_meta_data")
    - re_path(r"^endpoint/(?P<eid>\d+)/edit_meta_data$", views.edit_meta_data,\n        name="edit_endpoint_meta_data")
    - re_path(r"^endpoint/bulk$", views.endpoint_bulk_update_all,\n        name="endpoints_bulk_all")
    - re_path(r"^product/(?P<pid>\d+)/endpoint/bulk_product$", views.endpoint_bulk_update_all,\n        name="endpoints_bulk_update_all_product")
    - re_path(r"^endpoint/(?P<fid>\d+)/bulk_status$", views.endpoint_status_bulk_update,\n        name="endpoints_status_bulk")
    - re_path(r"^endpoint/migrate$", views.migrate_endpoints_view,\n        name="endpoint_migrate")
    - re_path(r"^endpoint/(?P<pid>\d+)/import_endpoint_meta$", views.import_endpoint_meta,\n        name="import_endpoint_meta")
    - re_path(r"^calendar$", views.engagement_calendar, name="calendar")
    - re_path(r"^calendar/engagements$", views.engagement_calendar, name="engagement_calendar")
    - re_path(r"^engagement$", views.engagements, {"view": "active"}, name="engagement")
    - re_path(r"^engagements_all$", views.engagements_all, name="engagements_all")
    - re_path(r"^engagement/all$", views.engagements, {"view": "all"}, name="all_engagements")
    - re_path(r"^engagement/active$", views.engagements, {"view": "active"}, name="active_engagements")
    - re_path(r"^engagement/(?P<eid>\d+)$", views.ViewEngagement.as_view(),\n        name="view_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/ics$", views.engagement_ics,\n        name="engagement_ics")
    - re_path(r"^engagement/(?P<eid>\d+)/edit$", views.edit_engagement,\n        name="edit_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/delete$", views.delete_engagement,\n        name="delete_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/copy$", views.copy_engagement,\n        name="copy_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/add_tests$", views.add_tests,\n        name="add_tests")
    - re_path(\n        r"^engagement/(?P<engagement_id>\d+)/import_scan_results$",\n        views.ImportScanResultsView.as_view(),\n        name="import_scan_results")
    - re_path(r"^engagement/(?P<eid>\d+)/close$", views.close_eng,\n        name="close_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/reopen$", views.reopen_eng,\n        name="reopen_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/complete_checklist$",\n        views.complete_checklist, name="complete_checklist")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/add$",\n        views.add_risk_acceptance, name="add_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/add/(?P<fid>\d+)$",\n        views.add_risk_acceptance, name="add_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/(?P<raid>\d+)$",\n        views.view_risk_acceptance, name="view_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/(?P<raid>\d+)/edit$",\n        views.edit_risk_acceptance, name="edit_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/(?P<raid>\d+)/expire$",\n        views.expire_risk_acceptance, name="expire_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/(?P<raid>\d+)/reinstate$",\n        views.reinstate_risk_acceptance, name="reinstate_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/(?P<raid>\d+)/delete$",\n        views.delete_risk_acceptance, name="delete_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/(?P<raid>\d+)/download$",\n        views.download_risk_acceptance, name="download_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/threatmodel$", views.view_threatmodel,\n        name="view_threatmodel")
    - re_path(r"^engagement/(?P<eid>\d+)/threatmodel/upload$",\n        views.upload_threatmodel, name="upload_threatmodel")
    - re_path(r"^engagement/csv_export$",\n        views.csv_export, name="engagement_csv_export")
    - re_path(r"^engagement/excel_export$",\n        views.excel_export, name="engagement_excel_export")
    - re_path(\n        r"^finding/(?P<finding_id>\d+)$",\n        views.ViewFinding.as_view(),\n        name="view_finding",\n    )
    - re_path(\n        r"^finding/(?P<finding_id>\d+)/edit$",\n        views.EditFinding.as_view(),\n        name="edit_finding",\n    )
    - re_path(\n        r"^finding/(?P<finding_id>\d+)/delete$",\n        views.DeleteFinding.as_view(),\n        name="delete_finding",\n    )
    - re_path(\n        r"^finding$",\n        views.ListFindings.as_view(),\n        name="all_findings",\n    )
    - re_path(\n        r"^finding/open$",\n        views.ListOpenFindings.as_view(),\n        name="open_findings",\n    )
    - re_path(\n        r"^finding/verified$",\n        views.ListVerifiedFindings.as_view(),\n        name="verified_findings",\n    )
    - re_path(\n        r"^finding/closed$",\n        views.ListClosedFindings.as_view(),\n        name="closed_findings",\n    )
    - re_path(\n        r"^finding/accepted$",\n        views.ListAcceptedFindings.as_view(),\n        name="accepted_findings",\n    )
    - re_path(\n        r"^product/(?P<product_id>\d+)/finding/open$",\n        views.ListOpenFindings.as_view(),\n        name="product_open_findings",\n    )
    - re_path(\n        r"^product/(?P<product_id>\d+)/findings$",\n        views.ListOpenFindings.as_view(),\n        name="view_product_findings_old",\n    )
    - re_path(\n        r"^product/(?P<product_id>\d+)/finding/verified$",\n        views.ListVerifiedFindings.as_view(),\n        name="product_verified_findings",\n    )
    - re_path(\n        r"^product/(?P<product_id>\d+)/finding/out_of_scope$",\n        views.ListOutOfScopeFindings.as_view(),\n        name="product_out_of_scope_findings",\n    )
    - re_path(\n        r"^product/(?P<product_id>\d+)/finding/inactive$",\n        views.ListInactiveFindings.as_view(),\n        name="product_inactive_findings",\n    )
    - re_path(\n        r"^product/(?P<product_id>\d+)/finding/all$",\n        views.ListFindings.as_view(),\n        name="product_all_findings",\n    )
    - re_path(\n        r"^product/(?P<product_id>\d+)/finding/closed$",\n        views.ListClosedFindings.as_view(),\n        name="product_closed_findings",\n    )
    - re_path(\n        r"^product/(?P<product_id>\d+)/finding/false_positive$",\n        views.ListFalsePositiveFindings.as_view(),\n        name="product_false_positive_findings",\n    )
    - re_path(\n        r"^product/(?P<product_id>\d+)/finding/accepted$",\n        views.ListAcceptedFindings.as_view(),\n        name="product_accepted_findings",\n    )
    - re_path(\n        r"^engagement/(?P<engagement_id>\d+)/finding/open$",\n        views.ListOpenFindings.as_view(),\n        name="engagement_open_findings",\n    )
    - re_path(\n        r"^engagement/(?P<engagement_id>\d+)/finding/closed$",\n        views.ListClosedFindings.as_view(),\n        name="engagement_closed_findings",\n    )
    - re_path(\n        r"^engagement/(?P<engagement_id>\d+)/finding/verified$",\n        views.ListVerifiedFindings.as_view(),\n        name="engagement_verified_findings",\n    )
    - re_path(\n        r"^engagement/(?P<engagement_id>\d+)/finding/accepted$",\n        views.ListAcceptedFindings.as_view(),\n        name="engagement_accepted_findings",\n    )
    - re_path(\n        r"^engagement/(?P<engagement_id>\d+)/finding/all$",\n        views.ListFindings.as_view(),\n        name="engagement_all_findings",\n    )
    - re_path(r"^finding/bulk$", views.finding_bulk_update_all,\n        name="finding_bulk_update_all")
    - re_path(r"^product/(?P<pid>\d+)/finding/bulk_product$", views.finding_bulk_update_all,\n        name="finding_bulk_update_all_product")
    - re_path(r"^finding/(?P<fid>\d+)/touch$",\n        views.touch_finding, name="touch_finding")
    - re_path(r"^finding/(?P<fid>\d+)/simple_risk_accept$",\n        views.simple_risk_accept, name="simple_risk_accept_finding")
    - re_path(r"^finding/(?P<fid>\d+)/simple_risk_unaccept$",\n        views.risk_unaccept, name="risk_unaccept_finding")
    - re_path(r"^finding/(?P<fid>\d+)/request_review$",\n        views.request_finding_review, name="request_finding_review")
    - re_path(r"^finding/(?P<fid>\d+)/review$",\n        views.clear_finding_review, name="clear_finding_review")
    - re_path(r"^finding/(?P<fid>\d+)/copy$",\n        views.copy_finding, name="copy_finding")
    - re_path(r"^finding/(?P<fid>\d+)/apply_cwe$",\n        views.apply_template_cwe, name="apply_template_cwe")
    - re_path(r"^finding/(?P<fid>\d+)/mktemplate$", views.mktemplate,\n        name="mktemplate")
    - re_path(r"^finding/(?P<fid>\d+)/find_template_to_apply$", views.find_template_to_apply,\n        name="find_template_to_apply")
    - re_path(r"^finding/(?P<tid>\d+)/(?P<fid>\d+)/choose_finding_template_options$", views.choose_finding_template_options,\n        name="choose_finding_template_options")
    - re_path(r"^finding/(?P<fid>\d+)/(?P<tid>\d+)/apply_template_to_finding$",\n        views.apply_template_to_finding, name="apply_template_to_finding")
    - re_path(r"^finding/(?P<fid>\d+)/close$", views.close_finding,\n        name="close_finding")
    - re_path(r"^finding/(?P<fid>\d+)/defect_review$",\n        views.defect_finding_review, name="defect_finding_review")
    - re_path(r"^finding/(?P<fid>\d+)/open$", views.reopen_finding,\n        name="reopen_finding")
    - re_path(r"^finding/image/(?P<token>[^/]+)$", views.download_finding_pic,\n        name="download_finding_pic")
    - re_path(r"^finding/(?P<fid>\d+)/merge$",\n        views.merge_finding_product, name="merge_finding")
