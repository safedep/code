{
    "capabilities": [
        {
            "capability_id": "logging:management",
            "evidence": [
                {
                    "line_no": 12,
                    "line_content": "logger = logging.getLogger(__name__)"
                }
            ]
        },
        {
            "capability_id": "env:config",
            "evidence": [
                {
                    "line_no": 17,
                    "line_content": "EXEMPT_URLS = [re.compile(settings.LOGIN_URL.lstrip(\"/\"))]"
                },
                {
                    "line_no": 18,
                    "line_content": "if hasattr(settings, \"LOGIN_EXEMPT_URLS\"):"
                },
                {
                    "line_no": 19,
                    "line_content": "EXEMPT_URLS += [re.compile(expr) for expr in settings.LOGIN_EXEMPT_URLS]"
                }
            ]
        },
        {
            "capability_id": "auth:session",
            "evidence": [
                {
                    "line_no": 27,
                    "line_content": "Middleware that requires a user to be authenticated to view any page other"
                },
                {
                    "line_no": 28,
                    "line_content": "than LOGIN_URL. Exemptions to this requirement can optionally be specified"
                }
            ]
        },
        {
            "capability_id": "web:framework",
            "evidence": [
                {
                    "line_no": 7,
                    "line_content": "from django.conf import settings"
                },
                {
                    "line_no": 8,
                    "line_content": "from django.db import models"
                },
                {
                    "line_no": 9,
                    "line_content": "from django.http import HttpResponseRedirect"
                },
                {
                    "line_no": 10,
                    "line_content": "from django.urls import reverse"
                },
                {
                    "line_no": 11,
                    "line_content": "from django.utils.functional import SimpleLazyObject"
                }
            ]
        },
        {
            "capability_id": "auth:user_context",
            "evidence": [
                {
                    "line_no": 5,
                    "line_content": "from auditlog.context import set_actor"
                }
            ]
        },
        {
            "capability_id": "network:url_parsing",
            "evidence": [
                {
                    "line_no": 4,
                    "line_content": "from urllib.parse import quote"
                }
            ]
        },
        {
            "capability_id": "threading:management",
            "evidence": [
                {
                    "line_no": 3,
                    "line_content": "from threading import local"
                }
            ]
        },
        {
            "capability_id": "io:regex",
            "evidence": [
                {
                    "line_no": 2,
                    "line_content": "import re"
                },
                {
                    "line_no": 17,
                    "line_content": "EXEMPT_URLS = [re.compile(settings.LOGIN_URL.lstrip(\"/\"))]"
                },
                {
                    "line_no": 19,
                    "line_content": "EXEMPT_URLS += [re.compile(expr) for expr in settings.LOGIN_EXEMPT_URLS]"
                }
            ]
        }
    ]
}