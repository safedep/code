// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CallgraphNodesColumns holds the columns for the "callgraph_nodes" table.
	CallgraphNodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "namespace", Type: field.TypeString, Unique: true},
	}
	// CallgraphNodesTable holds the schema information for the "callgraph_nodes" table.
	CallgraphNodesTable = &schema.Table{
		Name:       "callgraph_nodes",
		Columns:    CallgraphNodesColumns,
		PrimaryKey: []*schema.Column{CallgraphNodesColumns[0]},
	}
	// CodeFilesColumns holds the columns for the "code_files" table.
	CodeFilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "FilePath", Type: field.TypeString, Unique: true},
	}
	// CodeFilesTable holds the schema information for the "code_files" table.
	CodeFilesTable = &schema.Table{
		Name:       "code_files",
		Columns:    CodeFilesColumns,
		PrimaryKey: []*schema.Column{CodeFilesColumns[0]},
	}
	// UsageEvidencesColumns holds the columns for the "usage_evidences" table.
	UsageEvidencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "package_hint", Type: field.TypeString, Nullable: true},
		{Name: "module_name", Type: field.TypeString},
		{Name: "module_item", Type: field.TypeString, Nullable: true},
		{Name: "module_alias", Type: field.TypeString, Nullable: true},
		{Name: "is_wild_card_usage", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "identifier", Type: field.TypeString, Nullable: true},
		{Name: "usage_file_path", Type: field.TypeString},
		{Name: "line", Type: field.TypeUint},
		{Name: "usage_evidence_code_file", Type: field.TypeInt},
	}
	// UsageEvidencesTable holds the schema information for the "usage_evidences" table.
	UsageEvidencesTable = &schema.Table{
		Name:       "usage_evidences",
		Columns:    UsageEvidencesColumns,
		PrimaryKey: []*schema.Column{UsageEvidencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "usage_evidences_code_files_code_file",
				Columns:    []*schema.Column{UsageEvidencesColumns[9]},
				RefColumns: []*schema.Column{CodeFilesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CallgraphNodeCallsToColumns holds the columns for the "callgraph_node_calls_to" table.
	CallgraphNodeCallsToColumns = []*schema.Column{
		{Name: "callgraph_node_id", Type: field.TypeInt},
		{Name: "called_by_id", Type: field.TypeInt},
	}
	// CallgraphNodeCallsToTable holds the schema information for the "callgraph_node_calls_to" table.
	CallgraphNodeCallsToTable = &schema.Table{
		Name:       "callgraph_node_calls_to",
		Columns:    CallgraphNodeCallsToColumns,
		PrimaryKey: []*schema.Column{CallgraphNodeCallsToColumns[0], CallgraphNodeCallsToColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "callgraph_node_calls_to_callgraph_node_id",
				Columns:    []*schema.Column{CallgraphNodeCallsToColumns[0]},
				RefColumns: []*schema.Column{CallgraphNodesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "callgraph_node_calls_to_called_by_id",
				Columns:    []*schema.Column{CallgraphNodeCallsToColumns[1]},
				RefColumns: []*schema.Column{CallgraphNodesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CallgraphNodesTable,
		CodeFilesTable,
		UsageEvidencesTable,
		CallgraphNodeCallsToTable,
	}
)

func init() {
	UsageEvidencesTable.ForeignKeys[0].RefTable = CodeFilesTable
	CallgraphNodeCallsToTable.ForeignKeys[0].RefTable = CallgraphNodesTable
	CallgraphNodeCallsToTable.ForeignKeys[1].RefTable = CallgraphNodesTable
}
