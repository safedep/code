
django:
  django.forms:
    - class JIRAForm_Admin(forms.ModelForm):\n    password = forms.CharField(widget=forms.PasswordInput, required=True)\n\n    # django doesn't seem to have an easy way to handle password fields as Password...
    - forms.CharField(widget=forms.PasswordInput, required=True)
    - forms.CharField(widget=forms.PasswordInput, required=True)
    - class CustomReportJsonForm(forms.Form):\n    json = forms.CharField()\n\n    def clean_json(self):\n        jdata = self.cleaned_data["json"]\n        try:\n            json.loads(jdata)\n        exce...
    - forms.CharField()
    - forms.ValidationError(msg)
    - class CoverPageForm(forms.Form):\n    heading = forms.CharField(max_length=200, required=False, help_text="The main report heading.")\n    sub_heading = forms.CharField(max_length=200, required=False,...
    - forms.CharField(max_length=200, required=False, help_text="The main report heading.")
    - forms.CharField(max_length=200, required=False, help_text="The report sub heading.")
    - forms.CharField(max_length=200, required=False, help_text="Additional metadata for this report.")
    - class TableOfContentsForm(forms.Form):\n    heading = forms.CharField(max_length=200, required=False, initial="Table of Contents")\n\n    class Meta:\n        exclude = []
    - forms.CharField(max_length=200, required=False, initial="Table of Contents")
    - class WYSIWYGContentForm(forms.Form):\n    heading = forms.CharField(max_length=200, required=False, initial="Custom Content")\n    content = forms.CharField(required=False, widget=Div(attrs={"class":...
    - forms.CharField(max_length=200, required=False, initial="Custom Content")
    - forms.CharField(required=False, widget=Div(attrs={"class": "editor"}))
    - forms.CharField(widget=forms.HiddenInput(), required=True)
    - forms.HiddenInput()
    - forms.BooleanField(required=False, help_text="Include a page break after the custom content.")
    - isinstance(field.field.widget, forms.CheckboxInput)
    - isinstance(field.field.widget, forms.CheckboxSelectMultiple)
    - isinstance(field.field.widget, forms.RadioSelect)
    - isinstance(field.field.widget, forms.FileInput)
    - isinstance(field, forms.ClearableFileInput)
    - isinstance(field.field.widget, forms.TextInput | forms.Textarea)
    - isinstance(field.field.widget, forms.TextInput | forms.Textarea)
    - class TableCheckboxWidget(forms.widgets.Widget):\n    template_name = "dojo/add_findings_as_accepted.html"\n\n    def __init__(self, *args, **kwargs):\n        self.findings = kwargs.pop("findings", [...
  django.template:
    - template.Library()
    - template.Library()
    - template.Library()
    - template.Library()
    - class Node(template.Node):\n        def __init__(self, iterable, num_cols, varname):\n            self.iterable = iterable\n            self.num_cols = num_cols\n            self.varname = varname\n\n...
    - template.Variable(self.iterable)
    - template.TemplateSyntaxError(msg)
    - template.Library()
    - template.Library()
    - template.Library()
    - template.Library()
    - template.Library()
    - template.Library()
    - template.Library()
    - template.Library()
    - template.Library()
    - template.Library()
  django.contrib.auth.models.Group:
    - Group(name=get_auth_group_name(instance))
    - Group.objects.get(name=auth_group_name)
    - if attempt > 999:\n        msg = f"Cannot find name for authorization group for Dojo_Group {group.name}, aborted after 999 attempts."\n        raise Exception(msg)\n    auth_group_name = group.name if...
    - Group(name=get_auth_group_name(group))
    - Group(name=get_auth_group_name(group))
    - models.ForeignKey(Group, null=True, blank=True, on_delete=models.CASCADE)
  django.contrib.messages:
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                _("Announcement removed for everyone."),\n                extra_tags="alert-success",\n            )
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                _("Announcement removed for everyone."),\n                extra_tags="alert-success",\n            )
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                _("Announcement updated successfully."),\n                extra_tags="alert-success",\n            )
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                _("Announcement updated successfully."),\n                extra_tags="alert-success",\n            )
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                _("Announcement removed."),\n                extra_tags="alert-success",\n            )
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                _("Announcement removed."),\n                extra_tags="alert-success",\n            )
    - messages.add_message(\n            request,\n            messages.ERROR,\n            _("Failed to remove announcement."),\n            extra_tags="alert-danger",\n        )
    - messages.add_message(\n            request,\n            messages.ERROR,\n            _("Failed to remove announcement."),\n            extra_tags="alert-danger",\n        )
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Credential Successfully Created.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Credential Successfully Created.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Credential Successfully Updated.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Credential Successfully Updated.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Note added successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Note added successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Note added successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Note added successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Note added successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Note added successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Note added successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Note added successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Note added successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Note added successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Credential Successfully Updated.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Credential Successfully Updated.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Credential Successfully Updated.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Credential Successfully Updated.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request, messages.SUCCESS, message, extra_tags=status_tag)
    - messages.add_message(\n                request, messages.SUCCESS, message, extra_tags=status_tag)
    - messages.add_message(\n                request, messages.SUCCESS, message, extra_tags=status_tag)
    - messages.add_message(\n                request, messages.SUCCESS, message, extra_tags=status_tag)
    - messages.add_message(\n                request, messages.SUCCESS, message, extra_tags=status_tag)
    - messages.add_message(\n                request, messages.SUCCESS, message, extra_tags=status_tag)
    - messages.add_message(\n                request, messages.SUCCESS, message, extra_tags=status_tag)
    - messages.add_message(\n                request, messages.SUCCESS, message, extra_tags=status_tag)
    - messages.add_message(\n            request, messages.SUCCESS, message, extra_tags=status_tag)
    - messages.add_message(\n            request, messages.SUCCESS, message, extra_tags=status_tag)
    - messages.add_message(request,\n                                 messages.SUCCESS,\n                                 "Environment added successfully.",\n                                 extra_tags="alert-success")
    - messages.add_message(request,\n                                 messages.SUCCESS,\n                                 "Environment added successfully.",\n                                 extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Environment updated successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Environment updated successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                    request,\n                    messages.SUCCESS,\n                    "Environment deleted successfully.",\n                    extra_tags="alert-success")
    - messages.add_message(\n                    request,\n                    messages.SUCCESS,\n                    "Environment deleted successfully.",\n                    extra_tags="alert-success")
    - messages.add_message(request,\n                                        messages.WARNING,\n                                        f"Environment cannot be deleted: {err}",\n                                        extra_tags="alert-warning")
    - messages.add_message(request,\n                                        messages.WARNING,\n                                        f"Environment cannot be deleted: {err}",\n                                        extra_tags="alert-warning")
    - messages.add_message(\n                request,\n                messages.ERROR,\n                'The column "hostname" must be present to map host to Endpoint.',\n                extra_tags="alert-danger")
    - messages.add_message(\n                request,\n                messages.ERROR,\n                'The column "hostname" must be present to map host to Endpoint.',\n                extra_tags="alert-danger")
    - messages.add_message(request,\n                                 messages.SUCCESS,\n                                 "Endpoint updated successfully.",\n                                 extra_tags="alert-success")
    - messages.add_message(request,\n                                 messages.SUCCESS,\n                                 "Endpoint updated successfully.",\n                                 extra_tags="alert-success")
    - messages.add_message(request,\n                                     messages.SUCCESS,\n                                     "Endpoint and relationships removed.",\n                                     extra_tags="alert-success")
    - messages.add_message(request,\n                                     messages.SUCCESS,\n                                     "Endpoint and relationships removed.",\n                                     extra_tags="alert-success")
    - messages.add_message(request,\n                                 messages.SUCCESS,\n                                 "Endpoint added successfully.",\n                                 extra_tags="alert-success")
    - messages.add_message(request,\n                                 messages.SUCCESS,\n                                 "Endpoint added successfully.",\n                                 extra_tags="alert-success")
    - messages.add_message(request,\n                                 messages.SUCCESS,\n                                 "Endpoint added successfully.",\n                                 extra_tags="alert-success")
    - messages.add_message(request,\n                                 messages.SUCCESS,\n                                 "Endpoint added successfully.",\n                                 extra_tags="alert-success")
    - messages.add_message(request,\n                                 messages.SUCCESS,\n                                 "Metadata added successfully.",\n                                 extra_tags="alert-success")
    - messages.add_message(request,\n                                 messages.SUCCESS,\n                                 "Metadata added successfully.",\n                                 extra_tags="alert-success")
    - messages.add_message(request,\n                             messages.SUCCESS,\n                             "Metadata edited successfully.",\n                             extra_tags="alert-success")
    - messages.add_message(request,\n                             messages.SUCCESS,\n                             "Metadata edited successfully.",\n                             extra_tags="alert-success")
    - messages.add_message(request,\n                    messages.SUCCESS,\n                    f"Bulk delete of {deleted_endpoint_count} endpoints was successful.",\n                    extra_tags="alert-success")
    - messages.add_message(request,\n                    messages.SUCCESS,\n                    f"Bulk delete of {deleted_endpoint_count} endpoints was successful.",\n                    extra_tags="alert-success")
    - messages.add_message(request,\n                                        messages.SUCCESS,\n                                        f"Bulk mitigation of {updated_endpoint_count} endpoints ({eps_count} e...
    - messages.add_message(request,\n                                        messages.SUCCESS,\n                                        f"Bulk mitigation of {updated_endpoint_count} endpoints ({eps_count} e...
    - messages.add_message(request,\n                                     messages.ERROR,\n                                     "Unable to process bulk update. Required fields were not selected.",\n                                     extra_tags="alert-danger")
    - messages.add_message(request,\n                                     messages.ERROR,\n                                     "Unable to process bulk update. Required fields were not selected.",\n                                     extra_tags="alert-danger")
    - messages.add_message(request,\n                                    messages.SUCCESS,\n                                    "Bulk edit of endpoints was successful. Check to make sure it is what you intended.",\n                                    extra_tags="alert-success")
    - messages.add_message(request,\n                                    messages.SUCCESS,\n                                    "Bulk edit of endpoints was successful. Check to make sure it is what you intended.",\n                                    extra_tags="alert-success")
    - messages.add_message(request,\n                                    messages.ERROR,\n                                    "Unable to process bulk update. Required fields were not selected.",\n                                    extra_tags="alert-danger")
    - messages.add_message(request,\n                                    messages.ERROR,\n                                    "Unable to process bulk update. Required fields were not selected.",\n                                    extra_tags="alert-danger")
    - messages.add_message(\n                    request,\n                    messages.ERROR,\n                    f"Report file is too large. Maximum supported size is {settings.SCAN_FILE_MAX_SIZE} MB",\n                    extra_tags="alert-danger")
    - messages.add_message(\n                    request,\n                    messages.ERROR,\n                    f"Report file is too large. Maximum supported size is {settings.SCAN_FILE_MAX_SIZE} MB",\n                    extra_tags="alert-danger")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Engagement updated successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Engagement updated successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                    request,\n                    messages.SUCCESS,\n                    message,\n                    extra_tags="alert-success")
    - messages.add_message(\n                    request,\n                    messages.SUCCESS,\n                    message,\n                    extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Engagement Copied successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Engagement Copied successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n            request,\n            messages.ERROR,\n            "Unable to copy engagement, please try again.",\n            extra_tags="alert-danger")
    - messages.add_message(\n            request,\n            messages.ERROR,\n            "Unable to copy engagement, please try again.",\n            extra_tags="alert-danger")
    - messages.add_message(request,\n                                 messages.SUCCESS,\n                                 "Note added successfully.",\n                                 extra_tags="alert-success")
    - messages.add_message(request,\n                                 messages.SUCCESS,\n                                 "Note added successfully.",\n                                 extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Test added successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n                request,\n                messages.SUCCESS,\n                "Test added successfully.",\n                extra_tags="alert-success")
    - messages.add_message(\n        request,\n        messages.SUCCESS,\n        "Engagement closed successfully.",\n        extra_tags="alert-success")
    - messages.add_message(\n        request,\n        messages.SUCCESS,\n        "Engagement closed successfully.",\n        extra_tags="alert-success")
