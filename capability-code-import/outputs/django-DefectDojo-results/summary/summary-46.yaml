
dojo:
  dojo.tools.risk_recon.api.RiskReconAPI:
    - RiskReconAPI(\n                    data.get("api_key", None),\n                    data.get("url_endpoint", None),\n                    data.get("companies", data.get("filters", [])),\n                )
  dojo.api_v2.views.SLAConfigurationViewset:
    - v2_api.register(r"sla_configurations", SLAConfigurationViewset, basename="sla_configurations")
  dojo.filters.LogEntryFilter:
    - LogEntryFilter(request.GET, queryset=history)
  dojo.models.App_Analysis:
    - model = App_Analysis
    - App_Analysis.objects.none()
    - model = App_Analysis
    - model = App_Analysis
    - model = App_Analysis
    - App_Analysis.objects.none()
    - App_Analysis.objects.all()
    - App_Analysis.objects.all()
    - App_Analysis.objects.annotate(\n        product__prod_type__member=Exists(authorized_product_type_roles),\n        product__member=Exists(authorized_product_roles),\n        product__prod_type__author...
    - App_Analysis.objects.filter(product=prod)
    - user_is_authorized(App_Analysis, Permissions.Technology_Edit, "tid")
    - get_object_or_404(App_Analysis, id=tid)
    - user_is_authorized(App_Analysis, Permissions.Technology_Delete, "tid")
    - get_object_or_404(App_Analysis, id=tid)
  dojo.utils.is_scan_file_too_large:
    - is_scan_file_too_large(file)
    - is_scan_file_too_large(file)
    - is_scan_file_too_large(data["file"])
    - is_scan_file_too_large(file)
    - is_scan_file_too_large(file)
    - is_scan_file_too_large(file)
  dojo.forms.DefectFindingForm:
    - DefectFindingForm(request.POST)
    - DefectFindingForm()
  dojo.forms.GlobalRoleForm:
    - GlobalRoleForm(*args, **kwargs)
    - GlobalRoleForm(*args, **kwargs)
    - GlobalRoleForm()
    - GlobalRoleForm(instance=global_role)
    - GlobalRoleForm(request.POST, instance=global_role)
    - GlobalRoleForm()
    - GlobalRoleForm(request.POST)
    - GlobalRoleForm()
    - GlobalRoleForm(instance=global_role)
    - GlobalRoleForm(request.POST)
    - GlobalRoleForm(request.POST, instance=global_role)
  dojo.tools.wizcli_common_parsers.parsers.WizcliParsers:
    - WizcliParsers.convert_status(row.get("Status", None))
    - WizcliParsers.convert_status(row.get("FindingStatus", None))
    - WizcliParsers.parse_libraries(libraries, test)
    - WizcliParsers.parse_secrets(secrets, test)
    - WizcliParsers.parse_rule_matches(rule_matches, test)
    - WizcliParsers.parse_secrets(secrets, test)
    - WizcliParsers.parse_os_packages(osPackages, test)
    - WizcliParsers.parse_libraries(libraries, test)
    - WizcliParsers.parse_secrets(secrets, test)
  dojo.test_type.urls.urlpatterns aliased as test_type_urls:
    - ur += test_type_urls
  dojo.github.close_external_issue_github:
    - close_external_issue_github(find, note, prod, eng)
  dojo.forms.Add_Product_Type_Member_UserForm:
    - Add_Product_Type_Member_UserForm(initial={"user": user.id})
    - Add_Product_Type_Member_UserForm(request.POST, initial={"user": user.id})
  dojo.announcement.views:
    - re_path(\n        r"^configure_announcement$",\n        views.configure_announcement,\n        name="configure_announcement",\n    )
    - re_path(\n        r"^dismiss_announcement$",\n        views.dismiss_announcement,\n        name="dismiss_announcement",\n    )
    - re_path(r"^components$", views.components, name="components")
    - re_path(r"^dev_env$", views.dev_env, name="dev_env")
    - re_path(r"^dev_env/add$", views.add_dev_env,\n        name="add_dev_env")
    - re_path(r"^dev_env/(?P<deid>\d+)/edit$",\n        views.edit_dev_env, name="edit_dev_env")
    - re_path(r"^endpoint$", views.all_endpoints,\n        name="endpoint")
    - re_path(r"^endpoint/host$", views.all_endpoint_hosts,\n        name="endpoint_host")
    - re_path(r"^endpoint/vulnerable$", views.vulnerable_endpoints,\n        name="vulnerable_endpoints")
    - re_path(r"^endpoint/host/vulnerable$", views.vulnerable_endpoint_hosts,\n        name="vulnerable_endpoint_hosts")
    - re_path(r"^endpoint/(?P<eid>\d+)$", views.view_endpoint,\n        name="view_endpoint")
    - re_path(r"^endpoint/host/(?P<eid>\d+)$", views.view_endpoint_host,\n        name="view_endpoint_host")
    - re_path(r"^endpoint/(?P<eid>\d+)/edit$", views.edit_endpoint,\n        name="edit_endpoint")
    - re_path(r"^endpoints/(?P<pid>\d+)/add$", views.add_endpoint,\n        name="add_endpoint")
    - re_path(r"^endpoint/(?P<eid>\d+)/delete$", views.delete_endpoint,\n        name="delete_endpoint")
    - re_path(r"^endpoints/add$", views.add_product_endpoint,\n        name="add_product_endpoint")
    - re_path(r"^endpoint/(?P<eid>\d+)/add_meta_data$", views.add_meta_data,\n        name="add_endpoint_meta_data")
    - re_path(r"^endpoint/(?P<eid>\d+)/edit_meta_data$", views.edit_meta_data,\n        name="edit_endpoint_meta_data")
    - re_path(r"^endpoint/bulk$", views.endpoint_bulk_update_all,\n        name="endpoints_bulk_all")
    - re_path(r"^product/(?P<pid>\d+)/endpoint/bulk_product$", views.endpoint_bulk_update_all,\n        name="endpoints_bulk_update_all_product")
    - re_path(r"^endpoint/(?P<fid>\d+)/bulk_status$", views.endpoint_status_bulk_update,\n        name="endpoints_status_bulk")
    - re_path(r"^endpoint/migrate$", views.migrate_endpoints_view,\n        name="endpoint_migrate")
    - re_path(r"^endpoint/(?P<pid>\d+)/import_endpoint_meta$", views.import_endpoint_meta,\n        name="import_endpoint_meta")
    - re_path(r"^calendar$", views.engagement_calendar, name="calendar")
    - re_path(r"^calendar/engagements$", views.engagement_calendar, name="engagement_calendar")
    - re_path(r"^engagement$", views.engagements, {"view": "active"}, name="engagement")
    - re_path(r"^engagements_all$", views.engagements_all, name="engagements_all")
    - re_path(r"^engagement/all$", views.engagements, {"view": "all"}, name="all_engagements")
    - re_path(r"^engagement/active$", views.engagements, {"view": "active"}, name="active_engagements")
    - views.ViewEngagement.as_view()
    - re_path(r"^engagement/(?P<eid>\d+)/ics$", views.engagement_ics,\n        name="engagement_ics")
    - re_path(r"^engagement/(?P<eid>\d+)/edit$", views.edit_engagement,\n        name="edit_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/delete$", views.delete_engagement,\n        name="delete_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/copy$", views.copy_engagement,\n        name="copy_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/add_tests$", views.add_tests,\n        name="add_tests")
    - views.ImportScanResultsView.as_view()
    - re_path(r"^engagement/(?P<eid>\d+)/close$", views.close_eng,\n        name="close_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/reopen$", views.reopen_eng,\n        name="reopen_engagement")
    - re_path(r"^engagement/(?P<eid>\d+)/complete_checklist$",\n        views.complete_checklist, name="complete_checklist")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/add$",\n        views.add_risk_acceptance, name="add_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/add/(?P<fid>\d+)$",\n        views.add_risk_acceptance, name="add_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/(?P<raid>\d+)$",\n        views.view_risk_acceptance, name="view_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/(?P<raid>\d+)/edit$",\n        views.edit_risk_acceptance, name="edit_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/(?P<raid>\d+)/expire$",\n        views.expire_risk_acceptance, name="expire_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/(?P<raid>\d+)/reinstate$",\n        views.reinstate_risk_acceptance, name="reinstate_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/(?P<raid>\d+)/delete$",\n        views.delete_risk_acceptance, name="delete_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/risk_acceptance/(?P<raid>\d+)/download$",\n        views.download_risk_acceptance, name="download_risk_acceptance")
    - re_path(r"^engagement/(?P<eid>\d+)/threatmodel$", views.view_threatmodel,\n        name="view_threatmodel")
    - re_path(r"^engagement/(?P<eid>\d+)/threatmodel/upload$",\n        views.upload_threatmodel, name="upload_threatmodel")
    - re_path(r"^engagement/csv_export$",\n        views.csv_export, name="engagement_csv_export")
    - re_path(r"^engagement/excel_export$",\n        views.excel_export, name="engagement_excel_export")
    - views.ViewFinding.as_view()
    - views.EditFinding.as_view()
    - views.DeleteFinding.as_view()
    - views.ListFindings.as_view()
    - views.ListOpenFindings.as_view()
    - views.ListVerifiedFindings.as_view()
    - views.ListClosedFindings.as_view()
    - views.ListAcceptedFindings.as_view()
    - views.ListOpenFindings.as_view()
    - views.ListOpenFindings.as_view()
    - views.ListVerifiedFindings.as_view()
    - views.ListOutOfScopeFindings.as_view()
    - views.ListInactiveFindings.as_view()
    - views.ListFindings.as_view()
    - views.ListClosedFindings.as_view()
    - views.ListFalsePositiveFindings.as_view()
    - views.ListAcceptedFindings.as_view()
    - views.ListOpenFindings.as_view()
    - views.ListClosedFindings.as_view()
    - views.ListVerifiedFindings.as_view()
    - views.ListAcceptedFindings.as_view()
    - views.ListFindings.as_view()
    - re_path(r"^finding/bulk$", views.finding_bulk_update_all,\n        name="finding_bulk_update_all")
    - re_path(r"^product/(?P<pid>\d+)/finding/bulk_product$", views.finding_bulk_update_all,\n        name="finding_bulk_update_all_product")
    - re_path(r"^finding/(?P<fid>\d+)/touch$",\n        views.touch_finding, name="touch_finding")
    - re_path(r"^finding/(?P<fid>\d+)/simple_risk_accept$",\n        views.simple_risk_accept, name="simple_risk_accept_finding")
    - re_path(r"^finding/(?P<fid>\d+)/simple_risk_unaccept$",\n        views.risk_unaccept, name="risk_unaccept_finding")
    - re_path(r"^finding/(?P<fid>\d+)/request_review$",\n        views.request_finding_review, name="request_finding_review")
    - re_path(r"^finding/(?P<fid>\d+)/review$",\n        views.clear_finding_review, name="clear_finding_review")
    - re_path(r"^finding/(?P<fid>\d+)/copy$",\n        views.copy_finding, name="copy_finding")
    - re_path(r"^finding/(?P<fid>\d+)/apply_cwe$",\n        views.apply_template_cwe, name="apply_template_cwe")
    - re_path(r"^finding/(?P<fid>\d+)/mktemplate$", views.mktemplate,\n        name="mktemplate")
    - re_path(r"^finding/(?P<fid>\d+)/find_template_to_apply$", views.find_template_to_apply,\n        name="find_template_to_apply")
    - re_path(r"^finding/(?P<tid>\d+)/(?P<fid>\d+)/choose_finding_template_options$", views.choose_finding_template_options,\n        name="choose_finding_template_options")
    - re_path(r"^finding/(?P<fid>\d+)/(?P<tid>\d+)/apply_template_to_finding$",\n        views.apply_template_to_finding, name="apply_template_to_finding")
    - re_path(r"^finding/(?P<fid>\d+)/close$", views.close_finding,\n        name="close_finding")
    - re_path(r"^finding/(?P<fid>\d+)/defect_review$",\n        views.defect_finding_review, name="defect_finding_review")
    - re_path(r"^finding/(?P<fid>\d+)/open$", views.reopen_finding,\n        name="reopen_finding")
    - re_path(r"^finding/image/(?P<token>[^/]+)$", views.download_finding_pic,\n        name="download_finding_pic")
    - re_path(r"^finding/(?P<fid>\d+)/merge$",\n        views.merge_finding_product, name="merge_finding")
    - re_path(r"^product/(?P<pid>\d+)/merge$", views.merge_finding_product,\n        name="merge_finding_product")
    - re_path(r"^finding/(?P<duplicate_id>\d+)/duplicate/(?P<original_id>\d+)$",\n        views.mark_finding_duplicate, name="mark_finding_duplicate")
    - re_path(r"^finding/(?P<duplicate_id>\d+)/duplicate/reset$",\n        views.reset_finding_duplicate_status, name="reset_finding_duplicate_status")
    - re_path(r"^finding/(?P<finding_id>\d+)/original/(?P<new_original_id>\d+)$",\n        views.set_finding_as_original, name="set_finding_as_original")
    - re_path(r"^finding/(?P<fid>\d+)/remediation_date$", views.remediation_date,\n        name="remediation_date")
    - re_path(r"^stub_finding/(?P<tid>\d+)/add$",\n        views.add_stub_finding, name="add_stub_finding")
    - re_path(r"^stub_finding/(?P<fid>\d+)/promote$",\n        views.promote_to_finding, name="promote_to_finding")
    - re_path(r"^stub_finding/(?P<fid>\d+)/delete$",\n        views.delete_stub_finding, name="delete_stub_finding")
    - re_path(r"^template$", views.templates,\n        name="templates")
    - re_path(r"^template/add$", views.add_template,\n        name="add_template")
    - re_path(r"^template/(?P<tid>\d+)/edit$",\n        views.edit_template, name="edit_template")
    - re_path(r"^template/(?P<tid>\d+)/delete$",\n        views.delete_template, name="delete_template")
    - re_path(r"^template/export$",\n        views.export_templates_to_json, name="export_template")
    - re_path(r"^finding/(?P<fid>\d+)/jira/unlink$", views.unlink_jira, name="finding_unlink_jira")
    - re_path(r"^finding/(?P<fid>\d+)/jira/push$", views.push_to_jira, name="finding_push_to_jira")
    - views.ListGroups.as_view()
    - views.AddGroup.as_view()
    - views.ViewGroup.as_view()
    - views.EditGroup.as_view()
    - views.DeleteGroup.as_view()
    - re_path(r"^group/(?P<gid>\d+)/add_product_group$", views.add_product_group, name="add_product_group_group")
    - re_path(r"^group/(?P<gid>\d+)/add_product_type_group$", views.add_product_type_group, name="add_product_type_group_group")
    - re_path(r"^group/(?P<gid>\d+)/add_group_member$", views.add_group_member, name="add_group_member")
    - re_path(r"group/member/(?P<mid>\d+)/edit_group_member$", views.edit_group_member, name="edit_group_member")
    - re_path(r"group/member/(?P<mid>\d+)/delete_group_member$", views.delete_group_member, name="delete_group_member")
    - re_path(r"^group/(?P<gid>\d+)/edit_permissions$", views.edit_permissions, name="edit_group_permissions")
    - re_path(r"^$", views.home, name="home")
    - re_path(r"^dashboard$", views.dashboard, name="dashboard")
    - re_path(r"^support$", views.support, name="support")
    - re_path(r"^metrics$", views.metrics, {"mtype": "All"},\n        name="metrics")
    - re_path(r"^critical_product_metrics$", views.critical_product_metrics, {"mtype": "All"},\n        name="critical_product_metrics")
    - re_path(r"^metrics/all$", views.metrics, {"mtype": "All"},\n        name="metrics_all")
    - re_path(r"^metrics/product/type$", views.metrics, {"mtype": "All"},\n        name="metrics_product_type")
    - re_path(r"^metrics/simple$", views.simple_metrics,\n        name="simple_metrics")
    - re_path(r"^metrics/product/type/(?P<mtype>\d+)$",\n        views.metrics, name="product_type_metrics")
    - re_path(r"^metrics/product/type/counts$",\n        views.product_type_counts, name="product_type_counts")
    - re_path(r"^metrics/product/tag/counts$",\n        views.product_tag_counts, name="product_tag_counts")
    - re_path(r"^metrics/engineer$", views.engineer_metrics,\n        name="engineer_metrics")
    - re_path(r"^metrics/engineer/(?P<eid>\d+)$", views.view_engineer,\n        name="view_engineer")
    - re_path(r"^note_type$",\n        views.note_type, name="note_type")
    - re_path(r"^note/type/(?P<ntid>\d+)/edit$",\n        views.edit_note_type, name="edit_note_type")
    - re_path(r"^note/type/(?P<ntid>\d+)/disable$",\n        views.disable_note_type, name="disable_note_type")
    - re_path(r"^note/type/(?P<ntid>\d+)/enable$",\n        views.enable_note_type, name="enable_note_type")
    - re_path(r"^add_note_type$",\n        views.add_note_type, name="add_note_type")
    - re_path(r"^product$", views.product, name="product")
    - re_path(r"^product/(?P<pid>\d+)$", views.view_product,\n        name="view_product")
    - re_path(r"^product/(?P<pid>\d+)/components$", views.view_product_components,\n        name="view_product_components")
    - re_path(r"^product/(?P<pid>\d+)/engagements$", views.view_engagements,\n        name="view_engagements")
    - re_path(r"^product/(?P<pid>\d+)/metrics$", views.view_product_metrics,\n        name="view_product_metrics")
    - re_path(r"^product/(?P<pid>\d+)/async_burndown_metrics$", views.async_burndown_metrics,\n        name="async_burndown_metrics")
    - re_path(r"^product/(?P<pid>\d+)/edit$", views.edit_product,\n        name="edit_product")
    - re_path(r"^product/(?P<pid>\d+)/delete$", views.delete_product,\n        name="delete_product")
    - re_path(r"^product/add", views.new_product, name="new_product")
    - re_path(r"^product/(?P<pid>\d+)/new_engagement$", views.new_eng_for_app,\n        name="new_eng_for_prod")
    - re_path(r"^product/(?P<pid>\d+)/new_technology$", views.new_tech_for_prod,\n         name="new_tech_for_prod")
    - re_path(r"^technology/(?P<tid>\d+)/edit$", views.edit_technology,\n        name="edit_technology")
    - re_path(r"^technology/(?P<tid>\d+)/delete$", views.delete_technology,\n        name="delete_technology")
    - re_path(r"^product/(?P<pid>\d+)/new_engagement/cicd$", views.new_eng_for_app_cicd,\n        name="new_eng_for_prod_cicd")
    - re_path(r"^product/(?P<pid>\d+)/add_meta_data$", views.add_meta_data,\n        name="add_meta_data")
    - re_path(r"^product/(?P<pid>\d+)/edit_notifications$", views.edit_notifications,\n        name="edit_notifications")
    - re_path(r"^product/(?P<pid>\d+)/edit_meta_data$", views.edit_meta_data,\n        name="edit_meta_data")
    - views.AdHocFindingView.as_view()
    - re_path(r"^product/(?P<pid>\d+)/engagement_presets$", views.engagement_presets,\n        name="engagement_presets")
    - re_path(r"^product/(?P<pid>\d+)/engagement_presets/(?P<eid>\d+)/edit$", views.edit_engagement_presets,\n        name="edit_engagement_presets")
    - re_path(r"^product/(?P<pid>\d+)/engagement_presets/add$", views.add_engagement_presets,\n        name="add_engagement_presets")
    - re_path(r"^product/(?P<pid>\d+)/engagement_presets/(?P<eid>\d+)/delete$", views.delete_engagement_presets,\n        name="delete_engagement_presets")
    - re_path(r"^product/(?P<pid>\d+)/add_member$", views.add_product_member,\n        name="add_product_member")
    - re_path(r"^product/member/(?P<memberid>\d+)/edit$", views.edit_product_member,\n        name="edit_product_member")
    - re_path(r"^product/member/(?P<memberid>\d+)/delete$", views.delete_product_member,\n        name="delete_product_member")
    - re_path(r"^product/(?P<pid>\d+)/add_api_scan_configuration$", views.add_api_scan_configuration,\n        name="add_api_scan_configuration")
    - re_path(r"^product/(?P<pid>\d+)/view_api_scan_configurations$", views.view_api_scan_configurations,\n        name="view_api_scan_configurations")
    - re_path(r"^product/(?P<pid>\d+)/edit_api_scan_configuration/(?P<pascid>\d+)$", views.edit_api_scan_configuration,\n        name="edit_api_scan_configuration")
    - re_path(r"^product/(?P<pid>\d+)/delete_api_scan_configuration/(?P<pascid>\d+)$", views.delete_api_scan_configuration,\n        name="delete_api_scan_configuration")
    - re_path(r"^product/(?P<pid>\d+)/add_group$", views.add_product_group,\n        name="add_product_group")
    - re_path(r"^product/group/(?P<groupid>\d+)/edit$", views.edit_product_group,\n        name="edit_product_group")
    - re_path(r"^product/group/(?P<groupid>\d+)/delete$", views.delete_product_group,\n        name="delete_product_group")
    - re_path(r"^product/type$", views.product_type, name="product_type")
    - re_path(r"^product/type/(?P<ptid>\d+)$",\n        views.view_product_type, name="view_product_type")
    - re_path(r"^product/type/(?P<ptid>\d+)/edit$",\n        views.edit_product_type, name="edit_product_type")
    - re_path(r"^product/type/(?P<ptid>\d+)/delete$",\n        views.delete_product_type, name="delete_product_type")
