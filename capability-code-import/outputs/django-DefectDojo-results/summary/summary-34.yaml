
dojo:
  dojo.forms.DeleteFindingTemplateForm:
    - DeleteFindingTemplateForm(request.POST, instance=template)
  dojo.authorization.roles_permissions.Roles:
    - Role.objects.get(id=Roles.Maintainer)
    - Role.objects.get(id=Roles.Owner)
  dojo.forms.DeleteProductForm:
    - DeleteProductForm(instance=product)
    - DeleteProductForm(request.POST, instance=product)
  dojo.reports.widgets.FindingList:
    - FindingList(request=request, findings=self.get_findings(request))
  dojo.tools.ptart.assessment_parser.PTARTAssessmentParser:
    - PTARTAssessmentParser()
  dojo.jira_link.helper aliased as jira_helper:
    - jira_helper.get_jira_issue_url(obj)
    - jira_helper.jira_already_linked(finding, data.get("jira_key"), data.get("jira_id"))
    - jira_helper.get_jira_issue(obj)
    - jira_helper.get_jira_creation(obj)
    - jira_helper.get_jira_change(obj)
    - jira_helper.is_push_all_issues(instance)
    - jira_helper.is_push_all_issues(\n            new_finding,\n        )
    - jira_helper.update_epic(engagement, **request.data)
    - jira_helper.add_epic(engagement, **request.data)
    - jira_helper.get_jira_project(serializer.instance)
    - jira_helper.add_comment(finding, note)
    - jira_helper.add_comment(finding.finding_group, note)
    - jira_helper.get_jira_project(jira_driver)
    - jira_helper.get_jira_project(jira_driver)
    - jira_helper.get_jira_project(eng)
    - jira_helper.close_epic(eng, push_to_jira=True)
    - jira_helper.get_jira_project(engagement, use_inheritance=False)
    - jira_helper.process_jira_project_form(request, instance=jira_project, target="engagement", engagement=engagement, product=engagement.product)
    - jira_helper.process_jira_epic_form(request, engagement=engagement)
    - jira_helper.get_jira_project(engagement, use_inheritance=False)
    - jira_helper.get_jira_issue(eng)
    - jira_helper.get_jira_project(eng)
    - jira_helper.get_jira_issue(eng)
    - jira_helper.get_jira_project(eng)
    - jira_helper.is_push_all_issues(engagement_or_product)
    - jira_helper.get_jira_project(engagement_or_product)
    - jira_helper.get_jira_instance(finding_group)
    - jira_helper.push_to_jira(finding_group)
    - jira_helper.get_jira_instance(group)
    - jira_helper.push_to_jira(group)
    - jira_helper.get_jira_instance(group)
    - jira_helper.push_to_jira(group)
    - jira_helper.push_to_jira(finding)
    - jira_helper.push_to_jira(finding.finding_group)
    - jira_helper.get_jira_project(product)
    - jira_helper.get_jira_project(engagement)
    - jira_helper.can_be_pushed_to_jira(finding)
    - jira_helper.add_comment(finding, new_note)
    - jira_helper.add_comment(finding.finding_group, new_note)
    - jira_helper.get_jira_project(finding)
    - jira_helper.is_push_all_issues(finding)
    - jira_helper.is_push_all_issues(finding)
    - jira_helper.finding_unlink_jira(request, finding)
    - jira_helper.finding_unlink_jira(request, finding)
    - jira_helper.finding_link_jira(request, finding, new_jira_issue_key)
    - jira_helper.finding_link_jira(request, finding, new_jira_issue_key)
    - jira_helper.get_jira_instance(finding)
    - jira_helper.push_to_jira(finding.finding_group)
    - jira_helper.get_jira_instance(finding)
    - jira_helper.get_jira_project(finding)
    - jira_helper.is_push_all_issues(finding)
    - jira_helper.add_comment(finding, new_note, force_push=True)
    - jira_helper.push_to_jira(finding.finding_group)
    - jira_helper.is_push_all_issues(finding)
    - jira_helper.get_jira_instance(finding)
    - jira_helper.add_comment(finding, new_note, force_push=True)
    - jira_helper.push_to_jira(finding.finding_group)
    - jira_helper.save_and_push_to_jira(finding)
    - jira_helper.is_push_all_issues(finding)
    - jira_helper.get_jira_instance(finding)
    - jira_helper.add_comment(finding, new_note, force_push=True)
    - jira_helper.push_to_jira(finding.finding_group)
    - jira_helper.is_push_all_issues(finding)
    - jira_helper.get_jira_instance(finding)
    - jira_helper.add_comment(finding, new_note, force_push=True)
    - jira_helper.push_to_jira(finding.finding_group)
    - jira_helper.is_push_all_issues(finding)
    - jira_helper.get_jira_project(finding)
    - jira_helper.get_jira_project(finding)
    - jira_helper.finding_unlink_jira(request, new_finding)
    - jira_helper.finding_unlink_jira(request, new_finding)
    - jira_helper.finding_link_jira(\n                            request, new_finding, new_jira_issue_key,\n                        )
    - jira_helper.finding_link_jira(\n                            request, new_finding, new_jira_issue_key,\n                        )
    - jira_helper.is_push_all_issues(test)
    - jira_helper.get_jira_project(test)
    - jira_helper.can_be_pushed_to_jira(group)
    - jira_helper.log_jira_alert(error_message, group)
    - jira_helper.push_to_jira(group)
    - jira_helper.is_push_all_issues(finding)
    - jira_helper.can_be_pushed_to_jira(finding)
    - jira_helper.log_jira_alert(error_message, finding)
    - jira_helper.log_jira_alert(error_message, finding)
    - jira_helper.push_to_jira(finding)
    - jira_helper.add_comment(finding, note)
    - jira_helper.finding_unlink_jira(request, finding)
    - jira_helper.push_to_jira(finding)
    - jira_helper.get_jira_url(self.instance)
    - jira_helper.get_jira_connection_raw(self.cleaned_data["url"],\n                                                self.cleaned_data["username"],\n                                                self.cleaned_data["password"])
    - jira_helper.get_jira_project(self.product)
    - jira_helper.can_be_pushed_to_jira(finding.finding_group, self.finding_form)
    - jira_helper.can_be_pushed_to_jira(finding, self.finding_form)
    - jira_helper.jira_get_issue(jira_project, jira_issue_key_new)
    - jira_helper.push_to_jira(findings[0].finding_group)
    - jira_helper.push_to_jira(findings[0])
    - jira_helper.push_to_jira(finding_group)
    - jira_helper.push_to_jira(finding_group)
    - jira_helper.push_to_jira(findings[0].finding_group)
    - jira_helper.push_to_jira(findings[0])
    - jira_helper.push_to_jira(finding_group)
    - jira_helper.process_resolution_from_jira(finding, resolution_id, resolution_name, assignee_name, jira_now, jissue)
    - jira_helper.get_jira_connection_raw(jira_server, jira_username, jira_password)
    - jira_helper.get_jira_connection_raw(jira_server, jira_username, jira_password)
    - jira_helper.get_jira_connection_raw(jira_server, jira_username, jira_password)
    - jira_helper.get_jira_connection(finding)
    - jira_helper.log_jira_message("Jira issue status change, please review.",\n                                 finding)
    - jira_helper.get_jira_project(jira_issue.finding)
    - jira_helper.get_jira_project(jira_issue.finding)
    - jira_helper.get_jira_issue_from_jira(find)
    - jira_helper.issue_from_jira_is_active(issue_from_jira)
    - jira_helper.issue_from_jira_is_active(issue_from_jira)
    - jira_helper.process_resolution_from_jira(find, resolution_id, resolution_name, assignee_name, issue_from_jira.fields.updated, find.jira_issue)
    - jira_helper.get_jira_instance(find)
    - jira_helper.get_jira_connection(jira_instance)
    - jira_helper.push_status_to_jira(find, jira_instance, jira, issue_from_jira, save=True)
    - jira_helper.update_jira_issue(finding)
    - jira_helper.has_jira_configured(self)
    - jira_helper.has_jira_issue(self)
    - jira_helper.has_jira_issue(self)
    - jira_helper.has_jira_issue(self.finding_group)
    - jira_helper.has_jira_configured(self)
    - jira_helper.has_jira_issue(self)
    - jira_helper.process_jira_project_form(request, product=product)
    - jira_helper.get_jira_project(product)
    - jira_helper.process_jira_project_form(request, instance=jira_project, product=product)
    - jira_helper.get_jira_project(product)
    - jira_helper.process_jira_project_form(request, instance=None,\n                                                                               engagement=engagement)
    - jira_helper.process_jira_epic_form(request, engagement=engagement)
    - jira_helper.get_jira_project(test)
    - jira_helper.is_push_all_issues(test)
    - jira_helper.is_push_all_issues(test)
    - jira_helper.is_push_all_issues(finding)
    - jira_helper.finding_unlink_jira(request, finding)
    - jira_helper.finding_unlink_jira(request, finding)
    - jira_helper.finding_link_jira(request, finding, new_jira_issue_key)
    - jira_helper.finding_link_jira(request, finding, new_jira_issue_key)
    - jira_helper.get_jira_project(finding)
    - jira_helper.get_jira_instance(finding)
    - jira_helper.add_simple_jira_comment(jira_instance, jira_issue, jira_comment)
    - jira_helper.get_jira_project(risk_acceptance.engagement)
    - jira_helper.get_jira_instance(risk_acceptance.engagement)
    - jira_helper.add_simple_jira_comment(jira_instance, jira_issue, jira_comment)
    - jira_helper.save_and_push_to_jira(finding)
    - jira_helper.get_jira_project(obj, use_inheritance)
    - jira_helper.get_jira_url(obj)
    - jira_helper.get_jira_project_url(obj)
    - jira_helper.get_jira_key(obj)
    - jira_helper.get_jira_creation(obj)
    - jira_helper.get_jira_change(obj)
    - jira_helper.get_jira_project(product_or_engagement)
    - jira_helper.get_jira_project(product_or_engagement, use_inheritance=False)
    - jira_helper.get_jira_project(test)
    - jira_helper.get_jira_project(test)
    - jira_helper.is_push_all_issues(test)
    - jira_helper.is_push_all_issues(finding)
    - jira_helper.finding_unlink_jira(request, finding)
    - jira_helper.finding_unlink_jira(request, finding)
    - jira_helper.finding_link_jira(request, finding, new_jira_issue_key)
    - jira_helper.finding_link_jira(request, finding, new_jira_issue_key)
    - jira_helper.is_push_all_issues(finding)
    - jira_helper.get_jira_project(test)
    - jira_helper.is_push_all_issues(test)
    - jira_helper.get_jira_project(test)
    - jira_helper.get_jira_project(test)
    - jira_helper.push_to_jira(new_finding)
    - jira_helper.get_jira_project(test)
    - jira_helper.is_push_all_issues(test)
    - jira_helper.get_jira_project(test)
    - jira_helper.is_push_all_issues(test)
    - jira_helper.get_jira_project(test)
    - jira_helper.add_simple_jira_comment(jira_instance, n.jira_issue, title)
    - jira_helper.get_jira_instance(finding)
    - jira_helper.get_jira_project(finding)
  dojo.risk_acceptance.helper aliased as ra_helper:
    - ra_helper.add_findings_to_risk_acceptance(user, instance, instance.accepted_findings.all())
    - ra_helper.add_findings_to_risk_acceptance(user, instance, findings_to_add)
    - ra_helper.remove_finding_from_risk_acceptance(user, instance, finding)
    - ra_helper.simple_risk_accept(self.context["request"].user, self.instance)
    - ra_helper.risk_unaccept(self.context["request"].user, self.instance)
    - ra_helper.add_findings_to_risk_acceptance(request.user, risk_acceptance, findings)
    - ra_helper.reinstate(risk_acceptance, old_expiration_date)
    - ra_helper.remove_finding_from_risk_acceptance(request.user, risk_acceptance, finding)
    - ra_helper.add_findings_to_risk_acceptance(request.user, risk_acceptance, findings)
    - ra_helper.expire_now(risk_acceptance)
    - ra_helper.reinstate(risk_acceptance, risk_acceptance.expiration_date)
    - ra_helper.delete(eng, risk_acceptance)
    - ra_helper.simple_risk_accept(request.user, new_finding, perform_save=False)
    - ra_helper.risk_unaccept(request.user, new_finding, perform_save=False)
    - ra_helper.risk_unaccept(request.user, finding)
    - ra_helper.risk_unaccept(request.user, finding)
    - ra_helper.simple_risk_accept(request.user, finding)
    - ra_helper.risk_unaccept(request.user, finding)
    - ra_helper.simple_risk_accept(request.user, finding)
    - ra_helper.risk_unaccept(request.user, finding)
    - ra_helper.add_findings_to_risk_acceptance(User.objects.get_or_create(username="JIRA")[0], ra, [finding])
    - ra_helper.risk_unaccept(User.objects.get_or_create(username="JIRA")[0], finding)
    - ra_helper.risk_unaccept(User.objects.get_or_create(username="JIRA")[0], finding)
    - ra_helper.risk_unaccept(User.objects.get_or_create(username="JIRA")[0], finding)
    - ra_helper.expiration_handler()
    - ra_helper.remove_finding.from_any_risk_acceptance(finding)
    - ra_helper.remove_finding.from_any_risk_acceptance(finding)
    - ra_helper.remove_finding.from_any_risk_acceptance(finding)
    - ra_helper.remove_finding.from_any_risk_acceptance(finding)
  dojo.models.Vulnerability_Id_Template:
    - model = Vulnerability_Id_Template
    - Vulnerability_Id_Template.objects.filter(finding_template=finding_template)
    - Vulnerability_Id_Template(finding_template=finding_template, vulnerability_id=vulnerability_id)
    - Vulnerability_Id_Template(\n                finding_template=template, vulnerability_id=vulnerability_id,\n            )
    - Vulnerability_Id_Template.objects.get_or_create(\n        finding_template=finding_template, vulnerability_id=finding_template.cve,\n    )
  dojo.importers.default_reimporter.DefaultReImporter:
    - DefaultReImporter(**kwargs)
    - DefaultReImporter(**context)
  dojo.engagement.services.close_engagement:
    - close_engagement(eng)
    - close_engagement(eng)
  dojo.forms.AssignUserForm:
    - AssignUserForm(instance=survey)
    - AssignUserForm(request.POST)
  dojo.api_v2.views.GlobalRoleViewSet:
    - v2_api.register(r"global_roles", GlobalRoleViewSet, basename="global_role")
  dojo.tool_product.urls.urlpatterns aliased as tool_product_urls:
    - ur += tool_product_urls
  dojo.authorization.authorization_decorators.user_is_authorized:
    - user_is_authorized(Product, Permissions.Product_Edit, "pid")
    - user_is_authorized(Cred_User, Permissions.Credential_Edit, "ttid")
    - user_is_authorized(Cred_User, Permissions.Credential_View, "ttid")
    - user_is_authorized(Product, Permissions.Product_View, "pid")
    - user_is_authorized(Cred_User, Permissions.Credential_View, "ttid")
    - user_is_authorized(Product, Permissions.Engagement_View, "eid")
    - user_is_authorized(Cred_User, Permissions.Credential_View, "ttid")
    - user_is_authorized(Product, Permissions.Test_View, "tid")
    - user_is_authorized(Cred_User, Permissions.Credential_View, "ttid")
    - user_is_authorized(Product, Permissions.Finding_View, "fid")
    - user_is_authorized(Cred_User, Permissions.Credential_View, "ttid")
    - user_is_authorized(Product, Permissions.Product_Edit, "pid")
    - user_is_authorized(Cred_User, Permissions.Credential_Edit, "ttid")
    - user_is_authorized(Engagement, Permissions.Engagement_Edit, "eid")
    - user_is_authorized(Cred_User, Permissions.Credential_Edit, "ttid")
    - user_is_authorized(Product, Permissions.Product_Edit, "pid")
    - user_is_authorized(Engagement, Permissions.Engagement_Edit, "eid")
    - user_is_authorized(Test, Permissions.Test_Edit, "tid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Cred_User, Permissions.Credential_Delete, "ttid")
    - user_is_authorized(Cred_User, Permissions.Credential_Delete, "ttid")
    - user_is_authorized(Product, Permissions.Product_Edit, "pid")
    - user_is_authorized(Cred_User, Permissions.Credential_Delete, "ttid")
    - user_is_authorized(Engagement, Permissions.Engagement_Edit, "eid")
    - user_is_authorized(Cred_User, Permissions.Credential_Delete, "ttid")
    - user_is_authorized(Test, Permissions.Test_Edit, "tid")
    - user_is_authorized(Cred_User, Permissions.Credential_Delete, "ttid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Cred_User, Permissions.Credential_Delete, "ttid")
    - user_is_authorized(Endpoint, Permissions.Endpoint_View, "eid")
    - user_is_authorized(Endpoint, Permissions.Endpoint_View, "eid")
    - user_is_authorized(Endpoint, Permissions.Endpoint_Edit, "eid")
    - user_is_authorized(Endpoint, Permissions.Endpoint_Delete, "eid")
    - user_is_authorized(Product, Permissions.Endpoint_Add, "pid")
    - user_is_authorized(Endpoint, Permissions.Endpoint_Edit, "eid")
    - user_is_authorized(Endpoint, Permissions.Endpoint_Edit, "eid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Product, Permissions.Endpoint_Edit, "pid")
    - user_is_authorized(Engagement, Permissions.Engagement_Edit, "eid")
    - user_is_authorized(Engagement, Permissions.Engagement_Delete, "eid")
    - user_is_authorized(Engagement, Permissions.Engagement_Edit, "eid")
    - user_is_authorized(Engagement, Permissions.Test_Add, "eid")
    - user_is_authorized(Engagement, Permissions.Engagement_Edit, "eid")
    - user_is_authorized(Engagement, Permissions.Engagement_Edit, "eid")
    - user_is_authorized(Engagement, Permissions.Engagement_Edit, "eid")
    - user_is_authorized(Engagement, Permissions.Risk_Acceptance, "eid")
    - user_is_authorized(Engagement, Permissions.Engagement_View, "eid")
    - user_is_authorized(Engagement, Permissions.Risk_Acceptance, "eid")
    - user_is_authorized(Engagement, Permissions.Risk_Acceptance, "eid")
    - user_is_authorized(Engagement, Permissions.Risk_Acceptance, "eid")
    - user_is_authorized(Engagement, Permissions.Risk_Acceptance, "eid")
    - user_is_authorized(Engagement, Permissions.Engagement_View, "eid")
    - user_is_authorized(Engagement, Permissions.Engagement_Edit, "eid")
    - user_is_authorized(Engagement, Permissions.Engagement_View, "eid")
    - user_is_authorized(Engagement, Permissions.Engagement_View, "eid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(\n    Finding,\n    Permissions.Finding_Edit,\n    "fid",\n)
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Finding, Permissions.Risk_Acceptance, "fid")
    - user_is_authorized(Finding, Permissions.Risk_Acceptance, "fid")
    - user_is_authorized(Finding, Permissions.Finding_View, "fid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Test, Permissions.Finding_Add, "tid")
    - user_is_authorized(Stub_Finding, Permissions.Finding_Delete, "fid")
    - user_is_authorized(Stub_Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Product, Permissions.Finding_Edit, "pid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "original_id")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "duplicate_id")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "finding_id")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Finding, Permissions.Finding_Edit, "fid")
    - user_is_authorized(Dojo_Group, Permissions.Group_Manage_Members, "gid")
    - user_is_authorized(Dojo_Group_Member, Permissions.Group_Manage_Members, "mid")
    - user_is_authorized(Dojo_Group_Member, Permissions.Group_Member_Delete, "mid")
    - user_is_authorized(Product, Permissions.Product_Tracking_Files_Add, "pid")
    - user_is_authorized(Product, Permissions.Product_Tracking_Files_View, "pid")
    - user_is_authorized(Product, Permissions.Product_Tracking_Files_Edit, "pid")
    - user_is_authorized(Product, Permissions.Product_Tracking_Files_Delete, "pid")
    - user_is_authorized(Product, Permissions.Product_View, "pid")
    - user_is_authorized(Product, Permissions.Component_View, "pid")
    - user_is_authorized(Product, Permissions.Product_View, "pid")
