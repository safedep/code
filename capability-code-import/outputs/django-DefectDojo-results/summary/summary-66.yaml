
django:
  django.db.models:
    - models.BooleanField(default=False, help_text=b"Instead of async deduping a finding the findings will be deduped synchronously and will 'block' the user until completion.")
    - models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')
    - models.TextField(default='none', editable=False)
    - models.BooleanField(default=False, editable=False)
    - models.CharField(max_length=100)
    - models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Test')
    - models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Test')
    - django.contrib.auth.models.UserManager()
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.Tool_Product_Settings')
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.Tool_Product_Settings')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tool_type', to='dojo.Tool_Type')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tool_type', to='dojo.Tool_Type')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Testing_Guide_Category')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Testing_Guide_Category')
    - models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ManyToManyField(blank=True, editable=False, to='dojo.Notes')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Test_Type')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Test_Type')
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.Test')
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.Test')
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(default=1, editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.ScanSettings')
    - models.ForeignKey(default=1, editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.ScanSettings')
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prod_type', to='dojo.Product_Type')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prod_type', to='dojo.Product_Type')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_manager', to='dojo.Dojo_User')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_manager', to='dojo.Dojo_User')
    - models.ManyToManyField(blank=True, to='dojo.Regulation')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_manager', to='dojo.Dojo_User')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='team_manager', to='dojo.Dojo_User')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='technical_contact', to='dojo.Dojo_User')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='technical_contact', to='dojo.Dojo_User')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Objects_Review')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Objects_Review')
    - models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(default=None, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(default=1, editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.Scan')
    - models.ForeignKey(default=1, editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.Scan')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='defect_review_requested_by', to='dojo.Dojo_User')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='defect_review_requested_by', to='dojo.Dojo_User')
    - models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_finding', to='dojo.Finding')
    - models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_finding', to='dojo.Finding')
    - models.ManyToManyField(blank=True, editable=False, related_name='_finding_duplicate_list_+', to='dojo.Finding')
    - models.ManyToManyField(blank=True, to='dojo.Endpoint')
    - models.ManyToManyField(editable=False, to='dojo.Test_Type')
    - models.ManyToManyField(blank=True, to='dojo.FindingImage')
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='last_reviewed_by', to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='last_reviewed_by', to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mitigated_by', to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mitigated_by', to=settings.AUTH_USER_MODEL)
    - models.ManyToManyField(blank=True, editable=False, to='dojo.Notes')
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='reporter', to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='reporter', to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='review_requested_by', to='dojo.Dojo_User')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='review_requested_by', to='dojo.Dojo_User')
    - models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.Test')
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='dojo.Test')
    - models.ManyToManyField(blank=True, default=None, to='dojo.Network_Locations')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ManyToManyField(blank=True, default=None, to='dojo.Test_Type')
    - models.ForeignKey(blank=True, help_text='Build server responsible for CI/CD test', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='build_server', to='dojo.Tool_Configuration', verbose_name='Build Server')
    - models.ForeignKey(blank=True, help_text='Build server responsible for CI/CD test', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='build_server', to='dojo.Tool_Configuration', verbose_name='Build Server')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Engagement_Type')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Engagement_Type')
    - models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(blank=True, help_text='Orchestration service responsible for CI/CD test', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orchestration', to='dojo.Tool_Configuration', verbose_name='Orchestration Engine')
    - models.ForeignKey(blank=True, help_text='Orchestration service responsible for CI/CD test', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orchestration', to='dojo.Tool_Configuration', verbose_name='Orchestration Engine')
    - models.ForeignKey(blank=True, help_text='Settings and notes for performing this engagement.', null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Engagement_Presets')
    - models.ForeignKey(blank=True, help_text='Settings and notes for performing this engagement.', null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Engagement_Presets')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Report_Type')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Report_Type')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Contact')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Contact')
    - models.ManyToManyField(blank=True, default=None, editable=False, to='dojo.Risk_Acceptance')
    - models.ForeignKey(blank=True, help_text='Source code server for CI/CD test', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source_code_management_server', to='dojo.Tool_Configuration', verbose_name='SCM Server')
    - models.ForeignKey(blank=True, help_text='Source code server for CI/CD test', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source_code_management_server', to='dojo.Tool_Configuration', verbose_name='SCM Server')
    - models.ManyToManyField(blank=True, editable=False, to='dojo.Endpoint_Params')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='endpoint_meta', to='dojo.Endpoint')
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='endpoint_meta', to='dojo.Endpoint')
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_meta', to='dojo.Product')
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_meta', to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Development_Environment')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Development_Environment')
    - models.ManyToManyField(blank=True, editable=False, to='dojo.Notes')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cred_user', to='dojo.Cred_User', verbose_name='Credential')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cred_user', to='dojo.Cred_User', verbose_name='Credential')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement', to='dojo.Engagement')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='engagement', to='dojo.Engagement')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finding', to='dojo.Finding')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finding', to='dojo.Finding')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product', to='dojo.Product')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product', to='dojo.Product')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test', to='dojo.Test')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='test', to='dojo.Test')
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Rule')
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Rule')
    - models.ManyToManyField(blank=True, related_name='auth_issues', to='dojo.Finding')
    - models.ManyToManyField(blank=True, related_name='author_issues', to='dojo.Finding')
    - models.ManyToManyField(blank=True, related_name='config_issues', to='dojo.Finding')
    - models.ManyToManyField(blank=True, related_name='crypto_issues', to='dojo.Finding')
    - models.ManyToManyField(blank=True, related_name='data_issues', to='dojo.Finding')
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='eng_for_check', to='dojo.Engagement')
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='eng_for_check', to='dojo.Engagement')
    - models.ManyToManyField(blank=True, related_name='other_issues', to='dojo.Finding')
    - models.ManyToManyField(blank=True, related_name='sensitive_issues', to='dojo.Finding')
    - models.ManyToManyField(blank=True, related_name='session_issues', to='dojo.Finding')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Finding')
    - models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dojo.Finding')
    - models.ManyToManyField(blank=True, to='dojo.CWE')
    - models.ManyToManyField(blank=True, to='dojo.Testing_Guide')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Benchmark_Type')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Benchmark_Type')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Benchmark_Requirement')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Benchmark_Requirement')
    - models.ManyToManyField(blank=True, editable=False, to='dojo.Notes')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Benchmark_Type', verbose_name='Benchmark Type')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Benchmark_Type', verbose_name='Benchmark Type')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dojo.Product')
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.DateTimeField(default=dojo.models.get_current_datetime, editable=False, null=True)
    - models.DateTimeField(default=dojo.models.get_current_datetime, editable=False, null=True)
    - models.BooleanField(default=False)
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_notes_set', to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_notes_set', to=settings.AUTH_USER_MODEL)
    - models.BooleanField(default=False)
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='editor_notes_set', to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='editor_notes_set', to=settings.AUTH_USER_MODEL)
    - models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')
    - models.TextField()
    - models.DateTimeField(default=dojo.models.get_current_datetime, editable=False, null=True)
    - models.DateTimeField(default=dojo.models.get_current_datetime, editable=False, null=True)
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)
    - models.ManyToManyField(blank=True, editable=False, to='dojo.NoteHistory')
